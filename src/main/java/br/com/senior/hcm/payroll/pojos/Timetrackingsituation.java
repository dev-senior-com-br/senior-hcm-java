/*
 * Folha de Pagamento
 * HCM - Folha de pagamento
 *
 *
 * Contact: seniorx-dev@senior.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package br.com.senior.hcm.payroll.pojos;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import br.com.senior.hcm.payroll.pojos.GenerateStabilityType;
import br.com.senior.hcm.payroll.pojos.LoseVacationRightType;
import br.com.senior.hcm.payroll.pojos.StabilityType;
import br.com.senior.hcm.payroll.pojos.TimeTrackingType;
import java.io.IOException;

/**
 * Timetrackingsituation
 */




public class Timetrackingsituation {
  @SerializedName("isforabsent")
  private Boolean isforabsent = null;

  @SerializedName("stabilityType")
  private StabilityType stabilityType = null;

  @SerializedName("code")
  private Integer code = null;

  @SerializedName("loseVacationRight")
  private LoseVacationRightType loseVacationRight = null;

  @SerializedName("loseVacation")
  private Boolean loseVacation = null;

  @SerializedName("situationDaysJustified")
  private Integer situationDaysJustified = null;

  @SerializedName("stabilityDay")
  private Double stabilityDay = null;

  @SerializedName("headCountControl")
  private Boolean headCountControl = null;

  @SerializedName("generateStability")
  private GenerateStabilityType generateStability = null;

  @SerializedName("maximumStabilityDays")
  private Double maximumStabilityDays = null;

  @SerializedName("trackingtype")
  private TimeTrackingType trackingtype = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("returnExamination")
  private Boolean returnExamination = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("extensionControl")
  private String extensionControl = null;

  public Timetrackingsituation isforabsent(Boolean isforabsent) {
    this.isforabsent = isforabsent;
    return this;
  }

   /**
   * Indica se o afastamento considera absenteísmo
   * @return isforabsent
  **/
  @ApiModelProperty(required = true, value = "Indica se o afastamento considera absenteísmo")
  public Boolean isIsforabsent() {
    return isforabsent;
  }

  public void setIsforabsent(Boolean isforabsent) {
    this.isforabsent = isforabsent;
  }

  public Timetrackingsituation stabilityType(StabilityType stabilityType) {
    this.stabilityType = stabilityType;
    return this;
  }

   /**
   * Get stabilityType
   * @return stabilityType
  **/
  @ApiModelProperty(value = "")
  public StabilityType getStabilityType() {
    return stabilityType;
  }

  public void setStabilityType(StabilityType stabilityType) {
    this.stabilityType = stabilityType;
  }

  public Timetrackingsituation code(Integer code) {
    this.code = code;
    return this;
  }

   /**
   * Código da situação
   * @return code
  **/
  @ApiModelProperty(value = "Código da situação")
  public Integer getCode() {
    return code;
  }

  public void setCode(Integer code) {
    this.code = code;
  }

  public Timetrackingsituation loseVacationRight(LoseVacationRightType loseVacationRight) {
    this.loseVacationRight = loseVacationRight;
    return this;
  }

   /**
   * Get loseVacationRight
   * @return loseVacationRight
  **/
  @ApiModelProperty(value = "")
  public LoseVacationRightType getLoseVacationRight() {
    return loseVacationRight;
  }

  public void setLoseVacationRight(LoseVacationRightType loseVacationRight) {
    this.loseVacationRight = loseVacationRight;
  }

  public Timetrackingsituation loseVacation(Boolean loseVacation) {
    this.loseVacation = loseVacation;
    return this;
  }

   /**
   * Perde férias
   * @return loseVacation
  **/
  @ApiModelProperty(value = "Perde férias")
  public Boolean isLoseVacation() {
    return loseVacation;
  }

  public void setLoseVacation(Boolean loseVacation) {
    this.loseVacation = loseVacation;
  }

  public Timetrackingsituation situationDaysJustified(Integer situationDaysJustified) {
    this.situationDaysJustified = situationDaysJustified;
    return this;
  }

   /**
   * Situação para os dias justificados
   * @return situationDaysJustified
  **/
  @ApiModelProperty(value = "Situação para os dias justificados")
  public Integer getSituationDaysJustified() {
    return situationDaysJustified;
  }

  public void setSituationDaysJustified(Integer situationDaysJustified) {
    this.situationDaysJustified = situationDaysJustified;
  }

  public Timetrackingsituation stabilityDay(Double stabilityDay) {
    this.stabilityDay = stabilityDay;
    return this;
  }

   /**
   * Dias estabilidade
   * @return stabilityDay
  **/
  @ApiModelProperty(value = "Dias estabilidade")
  public Double getStabilityDay() {
    return stabilityDay;
  }

  public void setStabilityDay(Double stabilityDay) {
    this.stabilityDay = stabilityDay;
  }

  public Timetrackingsituation headCountControl(Boolean headCountControl) {
    this.headCountControl = headCountControl;
    return this;
  }

   /**
   * Considera afastados quadro
   * @return headCountControl
  **/
  @ApiModelProperty(value = "Considera afastados quadro")
  public Boolean isHeadCountControl() {
    return headCountControl;
  }

  public void setHeadCountControl(Boolean headCountControl) {
    this.headCountControl = headCountControl;
  }

  public Timetrackingsituation generateStability(GenerateStabilityType generateStability) {
    this.generateStability = generateStability;
    return this;
  }

   /**
   * Get generateStability
   * @return generateStability
  **/
  @ApiModelProperty(value = "")
  public GenerateStabilityType getGenerateStability() {
    return generateStability;
  }

  public void setGenerateStability(GenerateStabilityType generateStability) {
    this.generateStability = generateStability;
  }

  public Timetrackingsituation maximumStabilityDays(Double maximumStabilityDays) {
    this.maximumStabilityDays = maximumStabilityDays;
    return this;
  }

   /**
   * Máximo dias estabilidade
   * @return maximumStabilityDays
  **/
  @ApiModelProperty(value = "Máximo dias estabilidade")
  public Double getMaximumStabilityDays() {
    return maximumStabilityDays;
  }

  public void setMaximumStabilityDays(Double maximumStabilityDays) {
    this.maximumStabilityDays = maximumStabilityDays;
  }

  public Timetrackingsituation trackingtype(TimeTrackingType trackingtype) {
    this.trackingtype = trackingtype;
    return this;
  }

   /**
   * Get trackingtype
   * @return trackingtype
  **/
  @ApiModelProperty(required = true, value = "")
  public TimeTrackingType getTrackingtype() {
    return trackingtype;
  }

  public void setTrackingtype(TimeTrackingType trackingtype) {
    this.trackingtype = trackingtype;
  }

  public Timetrackingsituation name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Nome do afastamento
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Nome do afastamento")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Timetrackingsituation returnExamination(Boolean returnExamination) {
    this.returnExamination = returnExamination;
    return this;
  }

   /**
   * Exame de retorno
   * @return returnExamination
  **/
  @ApiModelProperty(value = "Exame de retorno")
  public Boolean isReturnExamination() {
    return returnExamination;
  }

  public void setReturnExamination(Boolean returnExamination) {
    this.returnExamination = returnExamination;
  }

  public Timetrackingsituation id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Id da situação do afastamento
   * @return id
  **/
  @ApiModelProperty(value = "Id da situação do afastamento")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Timetrackingsituation extensionControl(String extensionControl) {
    this.extensionControl = extensionControl;
    return this;
  }

   /**
   * Controla prorrogação
   * @return extensionControl
  **/
  @ApiModelProperty(value = "Controla prorrogação")
  public String getExtensionControl() {
    return extensionControl;
  }

  public void setExtensionControl(String extensionControl) {
    this.extensionControl = extensionControl;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Timetrackingsituation timetrackingsituation = (Timetrackingsituation) o;
    return Objects.equals(this.isforabsent, timetrackingsituation.isforabsent) &&
        Objects.equals(this.stabilityType, timetrackingsituation.stabilityType) &&
        Objects.equals(this.code, timetrackingsituation.code) &&
        Objects.equals(this.loseVacationRight, timetrackingsituation.loseVacationRight) &&
        Objects.equals(this.loseVacation, timetrackingsituation.loseVacation) &&
        Objects.equals(this.situationDaysJustified, timetrackingsituation.situationDaysJustified) &&
        Objects.equals(this.stabilityDay, timetrackingsituation.stabilityDay) &&
        Objects.equals(this.headCountControl, timetrackingsituation.headCountControl) &&
        Objects.equals(this.generateStability, timetrackingsituation.generateStability) &&
        Objects.equals(this.maximumStabilityDays, timetrackingsituation.maximumStabilityDays) &&
        Objects.equals(this.trackingtype, timetrackingsituation.trackingtype) &&
        Objects.equals(this.name, timetrackingsituation.name) &&
        Objects.equals(this.returnExamination, timetrackingsituation.returnExamination) &&
        Objects.equals(this.id, timetrackingsituation.id) &&
        Objects.equals(this.extensionControl, timetrackingsituation.extensionControl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isforabsent, stabilityType, code, loseVacationRight, loseVacation, situationDaysJustified, stabilityDay, headCountControl, generateStability, maximumStabilityDays, trackingtype, name, returnExamination, id, extensionControl);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Timetrackingsituation {\n");
    
    sb.append("    isforabsent: ").append(toIndentedString(isforabsent)).append("\n");
    sb.append("    stabilityType: ").append(toIndentedString(stabilityType)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    loseVacationRight: ").append(toIndentedString(loseVacationRight)).append("\n");
    sb.append("    loseVacation: ").append(toIndentedString(loseVacation)).append("\n");
    sb.append("    situationDaysJustified: ").append(toIndentedString(situationDaysJustified)).append("\n");
    sb.append("    stabilityDay: ").append(toIndentedString(stabilityDay)).append("\n");
    sb.append("    headCountControl: ").append(toIndentedString(headCountControl)).append("\n");
    sb.append("    generateStability: ").append(toIndentedString(generateStability)).append("\n");
    sb.append("    maximumStabilityDays: ").append(toIndentedString(maximumStabilityDays)).append("\n");
    sb.append("    trackingtype: ").append(toIndentedString(trackingtype)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    returnExamination: ").append(toIndentedString(returnExamination)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    extensionControl: ").append(toIndentedString(extensionControl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

