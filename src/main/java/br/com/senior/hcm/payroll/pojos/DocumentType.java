/*
 * Folha de Pagamento
 * HCM - Folha de pagamento
 *
 * OpenAPI spec version: 9.0.3
 * Contact: seniorx-dev@senior.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package br.com.senior.hcm.payroll.pojos;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets documentType
 */
@JsonAdapter(DocumentType.Adapter.class)
public enum DocumentType {
  
  VOTER_REGISTRATION_CARD("VOTER_REGISTRATION_CARD"),
  
  DRIVERS_LICENSE("DRIVERS_LICENSE"),
  
  RESERVIST_CERTIFICATE("RESERVIST_CERTIFICATE"),
  
  CIVIL_CERTIFICATE("CIVIL_CERTIFICATE"),
  
  PASSPORT("PASSPORT"),
  
  CIVILIAN_IDENTITY_REGISTRY("CIVILIAN_IDENTITY_REGISTRY"),
  
  NATURALIZATION_DECREE("NATURALIZATION_DECREE"),
  
  NATIONAL_HEALTH_CARD("NATIONAL_HEALTH_CARD"),
  
  DECLARATION_OF_LIVE_BIRTH("DECLARATION_OF_LIVE_BIRTH"),
  
  PROFESSIONAL_COUNCIL("PROFESSIONAL_COUNCIL"),
  
  RG("RG"),
  
  CPF("CPF"),
  
  DEATH_CERTIFICATE("DEATH_CERTIFICATE"),
  
  PROVISION_FUND("PROVISION_FUND"),
  
  SOCIAL_INSURANCE("SOCIAL_INSURANCE"),
  
  IDENTIFICATION_DOCUMENT("IDENTIFICATION_DOCUMENT");

  private String value;

  DocumentType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static DocumentType fromValue(String text) {
    for (DocumentType b : DocumentType.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<DocumentType> {
    @Override
    public void write(final JsonWriter jsonWriter, final DocumentType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public DocumentType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return DocumentType.fromValue(String.valueOf(value));
    }
  }
}

