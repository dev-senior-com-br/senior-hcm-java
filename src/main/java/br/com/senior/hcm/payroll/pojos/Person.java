/*
 * Folha de Pagamento
 * HCM - Folha de pagamento
 *
 *
 * Contact: seniorx-dev@senior.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package br.com.senior.hcm.payroll.pojos;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import br.com.senior.hcm.payroll.pojos.City;
import br.com.senior.hcm.payroll.pojos.GenderType;
import br.com.senior.hcm.payroll.pojos.MaritalStatus;
import br.com.senior.hcm.payroll.pojos.Nationality;
import br.com.senior.hcm.payroll.pojos.Professionalcouncil;
import br.com.senior.hcm.payroll.pojos.RacialType;
import br.com.senior.hcm.payroll.pojos.Religion;
import java.io.IOException;
import org.threeten.bp.LocalDate;

/**
 * Person
 */

public class Person {
  @SerializedName("birthday")
  private LocalDate birthday = null;

  @SerializedName("fatherName")
  private String fatherName = null;

  @SerializedName("firstname")
  private String firstname = null;

  @SerializedName("race")
  private RacialType race = null;

  @SerializedName("gender")
  private GenderType gender = null;

  @SerializedName("isdisabledperson")
  private Boolean isdisabledperson = null;

  @SerializedName("motherName")
  private String motherName = null;

  @SerializedName("middlename")
  private String middlename = null;

  @SerializedName("educationdegree")
  private String educationdegree = null;

  @SerializedName("placeofbirth")
  private City placeofbirth = null;

  @SerializedName("lastname")
  private String lastname = null;

  @SerializedName("religion")
  private Religion religion = null;

  @SerializedName("socialName")
  private String socialName = null;

  @SerializedName("nationality")
  private Nationality nationality = null;

  @SerializedName("attachment")
  private String attachment = null;

  @SerializedName("maritalstatus")
  private MaritalStatus maritalstatus = null;

  @SerializedName("cpf")
  private String cpf = null;

  @SerializedName("nickname")
  private String nickname = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("professionalCouncil")
  private Professionalcouncil professionalCouncil = null;

  @SerializedName("username")
  private String username = null;

  public Person birthday(LocalDate birthday) {
    this.birthday = birthday;
    return this;
  }

   /**
   * Data de aniversário
   * @return birthday
  **/
  @ApiModelProperty(value = "Data de aniversário")
  public LocalDate getBirthday() {
    return birthday;
  }

  public void setBirthday(LocalDate birthday) {
    this.birthday = birthday;
  }

  public Person fatherName(String fatherName) {
    this.fatherName = fatherName;
    return this;
  }

   /**
   * Nome do pai
   * @return fatherName
  **/
  @ApiModelProperty(value = "Nome do pai")
  public String getFatherName() {
    return fatherName;
  }

  public void setFatherName(String fatherName) {
    this.fatherName = fatherName;
  }

  public Person firstname(String firstname) {
    this.firstname = firstname;
    return this;
  }

   /**
   * Primeiro nome
   * @return firstname
  **/
  @ApiModelProperty(required = true, value = "Primeiro nome")
  public String getFirstname() {
    return firstname;
  }

  public void setFirstname(String firstname) {
    this.firstname = firstname;
  }

  public Person race(RacialType race) {
    this.race = race;
    return this;
  }

   /**
   * Get race
   * @return race
  **/
  @ApiModelProperty(required = true, value = "")
  public RacialType getRace() {
    return race;
  }

  public void setRace(RacialType race) {
    this.race = race;
  }

  public Person gender(GenderType gender) {
    this.gender = gender;
    return this;
  }

   /**
   * Get gender
   * @return gender
  **/
  @ApiModelProperty(required = true, value = "")
  public GenderType getGender() {
    return gender;
  }

  public void setGender(GenderType gender) {
    this.gender = gender;
  }

  public Person isdisabledperson(Boolean isdisabledperson) {
    this.isdisabledperson = isdisabledperson;
    return this;
  }

   /**
   * É uma pessoa com deficiência?
   * @return isdisabledperson
  **/
  @ApiModelProperty(required = true, value = "É uma pessoa com deficiência?")
  public Boolean isIsdisabledperson() {
    return isdisabledperson;
  }

  public void setIsdisabledperson(Boolean isdisabledperson) {
    this.isdisabledperson = isdisabledperson;
  }

  public Person motherName(String motherName) {
    this.motherName = motherName;
    return this;
  }

   /**
   * Nome da mãe
   * @return motherName
  **/
  @ApiModelProperty(value = "Nome da mãe")
  public String getMotherName() {
    return motherName;
  }

  public void setMotherName(String motherName) {
    this.motherName = motherName;
  }

  public Person middlename(String middlename) {
    this.middlename = middlename;
    return this;
  }

   /**
   * Nome do meio
   * @return middlename
  **/
  @ApiModelProperty(value = "Nome do meio")
  public String getMiddlename() {
    return middlename;
  }

  public void setMiddlename(String middlename) {
    this.middlename = middlename;
  }

  public Person educationdegree(String educationdegree) {
    this.educationdegree = educationdegree;
    return this;
  }

   /**
   * Relacionamento com grau de instrução
   * @return educationdegree
  **/
  @ApiModelProperty(required = true, value = "Relacionamento com grau de instrução")
  public String getEducationdegree() {
    return educationdegree;
  }

  public void setEducationdegree(String educationdegree) {
    this.educationdegree = educationdegree;
  }

  public Person placeofbirth(City placeofbirth) {
    this.placeofbirth = placeofbirth;
    return this;
  }

   /**
   * Get placeofbirth
   * @return placeofbirth
  **/
  @ApiModelProperty(value = "")
  public City getPlaceofbirth() {
    return placeofbirth;
  }

  public void setPlaceofbirth(City placeofbirth) {
    this.placeofbirth = placeofbirth;
  }

  public Person lastname(String lastname) {
    this.lastname = lastname;
    return this;
  }

   /**
   * Último nome
   * @return lastname
  **/
  @ApiModelProperty(required = true, value = "Último nome")
  public String getLastname() {
    return lastname;
  }

  public void setLastname(String lastname) {
    this.lastname = lastname;
  }

  public Person religion(Religion religion) {
    this.religion = religion;
    return this;
  }

   /**
   * Get religion
   * @return religion
  **/
  @ApiModelProperty(value = "")
  public Religion getReligion() {
    return religion;
  }

  public void setReligion(Religion religion) {
    this.religion = religion;
  }

  public Person socialName(String socialName) {
    this.socialName = socialName;
    return this;
  }

   /**
   * Nome social
   * @return socialName
  **/
  @ApiModelProperty(value = "Nome social")
  public String getSocialName() {
    return socialName;
  }

  public void setSocialName(String socialName) {
    this.socialName = socialName;
  }

  public Person nationality(Nationality nationality) {
    this.nationality = nationality;
    return this;
  }

   /**
   * Get nationality
   * @return nationality
  **/
  @ApiModelProperty(required = true, value = "")
  public Nationality getNationality() {
    return nationality;
  }

  public void setNationality(Nationality nationality) {
    this.nationality = nationality;
  }

  public Person attachment(String attachment) {
    this.attachment = attachment;
    return this;
  }

   /**
   * Id do upload da foto da g7
   * @return attachment
  **/
  @ApiModelProperty(value = "Id do upload da foto da g7")
  public String getAttachment() {
    return attachment;
  }

  public void setAttachment(String attachment) {
    this.attachment = attachment;
  }

  public Person maritalstatus(MaritalStatus maritalstatus) {
    this.maritalstatus = maritalstatus;
    return this;
  }

   /**
   * Get maritalstatus
   * @return maritalstatus
  **/
  @ApiModelProperty(value = "")
  public MaritalStatus getMaritalstatus() {
    return maritalstatus;
  }

  public void setMaritalstatus(MaritalStatus maritalstatus) {
    this.maritalstatus = maritalstatus;
  }

  public Person cpf(String cpf) {
    this.cpf = cpf;
    return this;
  }

   /**
   * Número de CPF
   * @return cpf
  **/
  @ApiModelProperty(value = "Número de CPF")
  public String getCpf() {
    return cpf;
  }

  public void setCpf(String cpf) {
    this.cpf = cpf;
  }

  public Person nickname(String nickname) {
    this.nickname = nickname;
    return this;
  }

   /**
   * Apelido
   * @return nickname
  **/
  @ApiModelProperty(value = "Apelido")
  public String getNickname() {
    return nickname;
  }

  public void setNickname(String nickname) {
    this.nickname = nickname;
  }

  public Person id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Id da pessoa
   * @return id
  **/
  @ApiModelProperty(value = "Id da pessoa")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Person professionalCouncil(Professionalcouncil professionalCouncil) {
    this.professionalCouncil = professionalCouncil;
    return this;
  }

   /**
   * Get professionalCouncil
   * @return professionalCouncil
  **/
  @ApiModelProperty(value = "")
  public Professionalcouncil getProfessionalCouncil() {
    return professionalCouncil;
  }

  public void setProfessionalCouncil(Professionalcouncil professionalCouncil) {
    this.professionalCouncil = professionalCouncil;
  }

  public Person username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Nome de usuário
   * @return username
  **/
  @ApiModelProperty(value = "Nome de usuário")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Person person = (Person) o;
    return Objects.equals(this.birthday, person.birthday) &&
        Objects.equals(this.fatherName, person.fatherName) &&
        Objects.equals(this.firstname, person.firstname) &&
        Objects.equals(this.race, person.race) &&
        Objects.equals(this.gender, person.gender) &&
        Objects.equals(this.isdisabledperson, person.isdisabledperson) &&
        Objects.equals(this.motherName, person.motherName) &&
        Objects.equals(this.middlename, person.middlename) &&
        Objects.equals(this.educationdegree, person.educationdegree) &&
        Objects.equals(this.placeofbirth, person.placeofbirth) &&
        Objects.equals(this.lastname, person.lastname) &&
        Objects.equals(this.religion, person.religion) &&
        Objects.equals(this.socialName, person.socialName) &&
        Objects.equals(this.nationality, person.nationality) &&
        Objects.equals(this.attachment, person.attachment) &&
        Objects.equals(this.maritalstatus, person.maritalstatus) &&
        Objects.equals(this.cpf, person.cpf) &&
        Objects.equals(this.nickname, person.nickname) &&
        Objects.equals(this.id, person.id) &&
        Objects.equals(this.professionalCouncil, person.professionalCouncil) &&
        Objects.equals(this.username, person.username);
  }

  @Override
  public int hashCode() {
    return Objects.hash(birthday, fatherName, firstname, race, gender, isdisabledperson, motherName, middlename, educationdegree, placeofbirth, lastname, religion, socialName, nationality, attachment, maritalstatus, cpf, nickname, id, professionalCouncil, username);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Person {\n");
    
    sb.append("    birthday: ").append(toIndentedString(birthday)).append("\n");
    sb.append("    fatherName: ").append(toIndentedString(fatherName)).append("\n");
    sb.append("    firstname: ").append(toIndentedString(firstname)).append("\n");
    sb.append("    race: ").append(toIndentedString(race)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    isdisabledperson: ").append(toIndentedString(isdisabledperson)).append("\n");
    sb.append("    motherName: ").append(toIndentedString(motherName)).append("\n");
    sb.append("    middlename: ").append(toIndentedString(middlename)).append("\n");
    sb.append("    educationdegree: ").append(toIndentedString(educationdegree)).append("\n");
    sb.append("    placeofbirth: ").append(toIndentedString(placeofbirth)).append("\n");
    sb.append("    lastname: ").append(toIndentedString(lastname)).append("\n");
    sb.append("    religion: ").append(toIndentedString(religion)).append("\n");
    sb.append("    socialName: ").append(toIndentedString(socialName)).append("\n");
    sb.append("    nationality: ").append(toIndentedString(nationality)).append("\n");
    sb.append("    attachment: ").append(toIndentedString(attachment)).append("\n");
    sb.append("    maritalstatus: ").append(toIndentedString(maritalstatus)).append("\n");
    sb.append("    cpf: ").append(toIndentedString(cpf)).append("\n");
    sb.append("    nickname: ").append(toIndentedString(nickname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    professionalCouncil: ").append(toIndentedString(professionalCouncil)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

