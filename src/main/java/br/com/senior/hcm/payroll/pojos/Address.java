/*
 * Folha de Pagamento
 * HCM - Folha de pagamento
 *
 *
 * Contact: seniorx-dev@senior.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package br.com.senior.hcm.payroll.pojos;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import br.com.senior.hcm.payroll.pojos.AddressType;
import br.com.senior.hcm.payroll.pojos.Administrativeregion;
import br.com.senior.hcm.payroll.pojos.City;
import br.com.senior.hcm.payroll.pojos.Neighborhood;
import java.io.IOException;
import org.threeten.bp.LocalDate;

/**
 * Address
 */

public class Address {
  @SerializedName("neighborhoodId")
  private Neighborhood neighborhoodId = null;

  @SerializedName("number")
  private String number = null;

  @SerializedName("address")
  private String address = null;

  @SerializedName("updatedate")
  private LocalDate updatedate = null;

  @SerializedName("postalcode")
  private String postalcode = null;

  @SerializedName("additional")
  private String additional = null;

  @SerializedName("administrativeregion")
  private Administrativeregion administrativeregion = null;

  @SerializedName("addresstype")
  private AddressType addresstype = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("cityId")
  private City cityId = null;

  @SerializedName("neighborhood")
  private String neighborhood = null;

  public Address neighborhoodId(Neighborhood neighborhoodId) {
    this.neighborhoodId = neighborhoodId;
    return this;
  }

   /**
   * Get neighborhoodId
   * @return neighborhoodId
  **/
  @ApiModelProperty(value = "")
  public Neighborhood getNeighborhoodId() {
    return neighborhoodId;
  }

  public void setNeighborhoodId(Neighborhood neighborhoodId) {
    this.neighborhoodId = neighborhoodId;
  }

  public Address number(String number) {
    this.number = number;
    return this;
  }

   /**
   * Número do endereço
   * @return number
  **/
  @ApiModelProperty(required = true, value = "Número do endereço")
  public String getNumber() {
    return number;
  }

  public void setNumber(String number) {
    this.number = number;
  }

  public Address address(String address) {
    this.address = address;
    return this;
  }

   /**
   * Endereço
   * @return address
  **/
  @ApiModelProperty(required = true, value = "Endereço")
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public Address updatedate(LocalDate updatedate) {
    this.updatedate = updatedate;
    return this;
  }

   /**
   * Data de alteração do endereço
   * @return updatedate
  **/
  @ApiModelProperty(value = "Data de alteração do endereço")
  public LocalDate getUpdatedate() {
    return updatedate;
  }

  public void setUpdatedate(LocalDate updatedate) {
    this.updatedate = updatedate;
  }

  public Address postalcode(String postalcode) {
    this.postalcode = postalcode;
    return this;
  }

   /**
   * Código de endereçamento postal
   * @return postalcode
  **/
  @ApiModelProperty(required = true, value = "Código de endereçamento postal")
  public String getPostalcode() {
    return postalcode;
  }

  public void setPostalcode(String postalcode) {
    this.postalcode = postalcode;
  }

  public Address additional(String additional) {
    this.additional = additional;
    return this;
  }

   /**
   * Informação adicional referente ao endereço
   * @return additional
  **/
  @ApiModelProperty(value = "Informação adicional referente ao endereço")
  public String getAdditional() {
    return additional;
  }

  public void setAdditional(String additional) {
    this.additional = additional;
  }

  public Address administrativeregion(Administrativeregion administrativeregion) {
    this.administrativeregion = administrativeregion;
    return this;
  }

   /**
   * Get administrativeregion
   * @return administrativeregion
  **/
  @ApiModelProperty(required = true, value = "")
  public Administrativeregion getAdministrativeregion() {
    return administrativeregion;
  }

  public void setAdministrativeregion(Administrativeregion administrativeregion) {
    this.administrativeregion = administrativeregion;
  }

  public Address addresstype(AddressType addresstype) {
    this.addresstype = addresstype;
    return this;
  }

   /**
   * Get addresstype
   * @return addresstype
  **/
  @ApiModelProperty(required = true, value = "")
  public AddressType getAddresstype() {
    return addresstype;
  }

  public void setAddresstype(AddressType addresstype) {
    this.addresstype = addresstype;
  }

  public Address id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Id do endereço
   * @return id
  **/
  @ApiModelProperty(value = "Id do endereço")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Address cityId(City cityId) {
    this.cityId = cityId;
    return this;
  }

   /**
   * Get cityId
   * @return cityId
  **/
  @ApiModelProperty(value = "")
  public City getCityId() {
    return cityId;
  }

  public void setCityId(City cityId) {
    this.cityId = cityId;
  }

  public Address neighborhood(String neighborhood) {
    this.neighborhood = neighborhood;
    return this;
  }

   /**
   * Bairro/Distrito a qual pertence este endereço, legado usado no hcm
   * @return neighborhood
  **/
  @ApiModelProperty(required = true, value = "Bairro/Distrito a qual pertence este endereço, legado usado no hcm")
  public String getNeighborhood() {
    return neighborhood;
  }

  public void setNeighborhood(String neighborhood) {
    this.neighborhood = neighborhood;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Address address = (Address) o;
    return Objects.equals(this.neighborhoodId, address.neighborhoodId) &&
        Objects.equals(this.number, address.number) &&
        Objects.equals(this.address, address.address) &&
        Objects.equals(this.updatedate, address.updatedate) &&
        Objects.equals(this.postalcode, address.postalcode) &&
        Objects.equals(this.additional, address.additional) &&
        Objects.equals(this.administrativeregion, address.administrativeregion) &&
        Objects.equals(this.addresstype, address.addresstype) &&
        Objects.equals(this.id, address.id) &&
        Objects.equals(this.cityId, address.cityId) &&
        Objects.equals(this.neighborhood, address.neighborhood);
  }

  @Override
  public int hashCode() {
    return Objects.hash(neighborhoodId, number, address, updatedate, postalcode, additional, administrativeregion, addresstype, id, cityId, neighborhood);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Address {\n");
    
    sb.append("    neighborhoodId: ").append(toIndentedString(neighborhoodId)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    updatedate: ").append(toIndentedString(updatedate)).append("\n");
    sb.append("    postalcode: ").append(toIndentedString(postalcode)).append("\n");
    sb.append("    additional: ").append(toIndentedString(additional)).append("\n");
    sb.append("    administrativeregion: ").append(toIndentedString(administrativeregion)).append("\n");
    sb.append("    addresstype: ").append(toIndentedString(addresstype)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    cityId: ").append(toIndentedString(cityId)).append("\n");
    sb.append("    neighborhood: ").append(toIndentedString(neighborhood)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

