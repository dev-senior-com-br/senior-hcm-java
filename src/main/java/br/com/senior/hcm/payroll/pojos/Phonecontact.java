/*
 * Folha de Pagamento
 * HCM - Folha de pagamento
 *
 *
 * Contact: seniorx-dev@senior.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package br.com.senior.hcm.payroll.pojos;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import br.com.senior.hcm.payroll.pojos.PhoneContactType;
import java.io.IOException;

/**
 * Phonecontact
 */




public class Phonecontact {
  @SerializedName("number")
  private String number = null;

  @SerializedName("extention")
  private String extention = null;

  @SerializedName("contacttype")
  private PhoneContactType contacttype = null;

  @SerializedName("countrycode")
  private Integer countrycode = null;

  @SerializedName("localcode")
  private Integer localcode = null;

  @SerializedName("id")
  private String id = null;

  public Phonecontact number(String number) {
    this.number = number;
    return this;
  }

   /**
   * Número do telefone
   * @return number
  **/
  @ApiModelProperty(required = true, value = "Número do telefone")
  public String getNumber() {
    return number;
  }

  public void setNumber(String number) {
    this.number = number;
  }

  public Phonecontact extention(String extention) {
    this.extention = extention;
    return this;
  }

   /**
   * Ramal do telefone
   * @return extention
  **/
  @ApiModelProperty(value = "Ramal do telefone")
  public String getExtention() {
    return extention;
  }

  public void setExtention(String extention) {
    this.extention = extention;
  }

  public Phonecontact contacttype(PhoneContactType contacttype) {
    this.contacttype = contacttype;
    return this;
  }

   /**
   * Get contacttype
   * @return contacttype
  **/
  @ApiModelProperty(required = true, value = "")
  public PhoneContactType getContacttype() {
    return contacttype;
  }

  public void setContacttype(PhoneContactType contacttype) {
    this.contacttype = contacttype;
  }

  public Phonecontact countrycode(Integer countrycode) {
    this.countrycode = countrycode;
    return this;
  }

   /**
   * Código do país (DDI)
   * @return countrycode
  **/
  @ApiModelProperty(value = "Código do país (DDI)")
  public Integer getCountrycode() {
    return countrycode;
  }

  public void setCountrycode(Integer countrycode) {
    this.countrycode = countrycode;
  }

  public Phonecontact localcode(Integer localcode) {
    this.localcode = localcode;
    return this;
  }

   /**
   * Código da localidade (DDD)
   * @return localcode
  **/
  @ApiModelProperty(value = "Código da localidade (DDD)")
  public Integer getLocalcode() {
    return localcode;
  }

  public void setLocalcode(Integer localcode) {
    this.localcode = localcode;
  }

  public Phonecontact id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Id do telefone
   * @return id
  **/
  @ApiModelProperty(value = "Id do telefone")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Phonecontact phonecontact = (Phonecontact) o;
    return Objects.equals(this.number, phonecontact.number) &&
        Objects.equals(this.extention, phonecontact.extention) &&
        Objects.equals(this.contacttype, phonecontact.contacttype) &&
        Objects.equals(this.countrycode, phonecontact.countrycode) &&
        Objects.equals(this.localcode, phonecontact.localcode) &&
        Objects.equals(this.id, phonecontact.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(number, extention, contacttype, countrycode, localcode, id);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Phonecontact {\n");
    
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    extention: ").append(toIndentedString(extention)).append("\n");
    sb.append("    contacttype: ").append(toIndentedString(contacttype)).append("\n");
    sb.append("    countrycode: ").append(toIndentedString(countrycode)).append("\n");
    sb.append("    localcode: ").append(toIndentedString(localcode)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

