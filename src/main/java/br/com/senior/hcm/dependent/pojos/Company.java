/*
 * Dependentes
 * HCM - Gestão de dependentes
 *
 *
 * Contact: seniorx-dev@senior.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package br.com.senior.hcm.dependent.pojos;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Company
 */




public class Company {
  @SerializedName("code")
  private Integer code = null;

  @SerializedName("headquarter")
  private String headquarter = null;

  @SerializedName("companyname")
  private String companyname = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("cnpj")
  private String cnpj = null;

  public Company code(Integer code) {
    this.code = code;
    return this;
  }

   /**
   * Código da empresa.
   * @return code
  **/
  @ApiModelProperty(value = "Código da empresa.")
  public Integer getCode() {
    return code;
  }

  public void setCode(Integer code) {
    this.code = code;
  }

  public Company headquarter(String headquarter) {
    this.headquarter = headquarter;
    return this;
  }

   /**
   * Relacionamento com a sede da empresa
   * @return headquarter
  **/
  @ApiModelProperty(value = "Relacionamento com a sede da empresa")
  public String getHeadquarter() {
    return headquarter;
  }

  public void setHeadquarter(String headquarter) {
    this.headquarter = headquarter;
  }

  public Company companyname(String companyname) {
    this.companyname = companyname;
    return this;
  }

   /**
   * Nome da empresa.
   * @return companyname
  **/
  @ApiModelProperty(value = "Nome da empresa.")
  public String getCompanyname() {
    return companyname;
  }

  public void setCompanyname(String companyname) {
    this.companyname = companyname;
  }

  public Company id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Id da entidade.
   * @return id
  **/
  @ApiModelProperty(value = "Id da entidade.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Company cnpj(String cnpj) {
    this.cnpj = cnpj;
    return this;
  }

   /**
   * Cnpj da empresa.
   * @return cnpj
  **/
  @ApiModelProperty(value = "Cnpj da empresa.")
  public String getCnpj() {
    return cnpj;
  }

  public void setCnpj(String cnpj) {
    this.cnpj = cnpj;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Company company = (Company) o;
    return Objects.equals(this.code, company.code) &&
        Objects.equals(this.headquarter, company.headquarter) &&
        Objects.equals(this.companyname, company.companyname) &&
        Objects.equals(this.id, company.id) &&
        Objects.equals(this.cnpj, company.cnpj);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, headquarter, companyname, id, cnpj);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Company {\n");
    
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    headquarter: ").append(toIndentedString(headquarter)).append("\n");
    sb.append("    companyname: ").append(toIndentedString(companyname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    cnpj: ").append(toIndentedString(cnpj)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

