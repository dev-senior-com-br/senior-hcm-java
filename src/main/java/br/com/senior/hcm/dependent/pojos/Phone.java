/*
 * Dependentes
 * HCM - Gestão de dependentes
 *
 * OpenAPI spec version: 6.0.0
 * Contact: seniorx-dev@senior.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package br.com.senior.hcm.dependent.pojos;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import br.com.senior.hcm.dependent.pojos.PhoneType;
import java.io.IOException;

/**
 * Phone
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-08-14T14:43:38.281Z")



public class Phone {
  @SerializedName("number")
  private String number = null;

  @SerializedName("phoneType")
  private PhoneType phoneType = null;

  @SerializedName("extention")
  private String extention = null;

  @SerializedName("internationalCode")
  private String internationalCode = null;

  @SerializedName("localCode")
  private String localCode = null;

  @SerializedName("id")
  private String id = null;

  public Phone number(String number) {
    this.number = number;
    return this;
  }

   /**
   * Número do telefone
   * @return number
  **/
  @ApiModelProperty(value = "Número do telefone")
  public String getNumber() {
    return number;
  }

  public void setNumber(String number) {
    this.number = number;
  }

  public Phone phoneType(PhoneType phoneType) {
    this.phoneType = phoneType;
    return this;
  }

   /**
   * Get phoneType
   * @return phoneType
  **/
  @ApiModelProperty(value = "")
  public PhoneType getPhoneType() {
    return phoneType;
  }

  public void setPhoneType(PhoneType phoneType) {
    this.phoneType = phoneType;
  }

  public Phone extention(String extention) {
    this.extention = extention;
    return this;
  }

   /**
   * Ramal do telefone
   * @return extention
  **/
  @ApiModelProperty(value = "Ramal do telefone")
  public String getExtention() {
    return extention;
  }

  public void setExtention(String extention) {
    this.extention = extention;
  }

  public Phone internationalCode(String internationalCode) {
    this.internationalCode = internationalCode;
    return this;
  }

   /**
   * Código do país (DDI)
   * @return internationalCode
  **/
  @ApiModelProperty(value = "Código do país (DDI)")
  public String getInternationalCode() {
    return internationalCode;
  }

  public void setInternationalCode(String internationalCode) {
    this.internationalCode = internationalCode;
  }

  public Phone localCode(String localCode) {
    this.localCode = localCode;
    return this;
  }

   /**
   * Código da localidade (DDD)
   * @return localCode
  **/
  @ApiModelProperty(value = "Código da localidade (DDD)")
  public String getLocalCode() {
    return localCode;
  }

  public void setLocalCode(String localCode) {
    this.localCode = localCode;
  }

  public Phone id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Id da entidade
   * @return id
  **/
  @ApiModelProperty(value = "Id da entidade")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Phone phone = (Phone) o;
    return Objects.equals(this.number, phone.number) &&
        Objects.equals(this.phoneType, phone.phoneType) &&
        Objects.equals(this.extention, phone.extention) &&
        Objects.equals(this.internationalCode, phone.internationalCode) &&
        Objects.equals(this.localCode, phone.localCode) &&
        Objects.equals(this.id, phone.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(number, phoneType, extention, internationalCode, localCode, id);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Phone {\n");
    
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    phoneType: ").append(toIndentedString(phoneType)).append("\n");
    sb.append("    extention: ").append(toIndentedString(extention)).append("\n");
    sb.append("    internationalCode: ").append(toIndentedString(internationalCode)).append("\n");
    sb.append("    localCode: ").append(toIndentedString(localCode)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

