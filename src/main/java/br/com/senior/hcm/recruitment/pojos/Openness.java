/*
 * Recrutamento e Seleção
 * Serviço do Gestão de Recrutamento e Seleção.
 *
 * OpenAPI spec version: 15.10.4
 * Contact: seniorx-dev@senior.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package br.com.senior.hcm.recruitment.pojos;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import br.com.senior.hcm.recruitment.pojos.BigFive;
import java.io.IOException;

/**
 * Openness
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-08-14T11:43:22.583Z")



public class Openness {
  @SerializedName("liberalism")
  private Double liberalism = null;

  @SerializedName("adventurousness")
  private Double adventurousness = null;

  @SerializedName("intellect")
  private Double intellect = null;

  @SerializedName("dimensionValue")
  private Double dimensionValue = null;

  @SerializedName("artisticInterests")
  private Double artisticInterests = null;

  @SerializedName("emotionality")
  private Double emotionality = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("imagination")
  private Double imagination = null;

  @SerializedName("bigFive")
  private BigFive bigFive = null;

  public Openness liberalism(Double liberalism) {
    this.liberalism = liberalism;
    return this;
  }

   /**
   * Faceta de Liberalismo
   * @return liberalism
  **/
  @ApiModelProperty(value = "Faceta de Liberalismo")
  public Double getLiberalism() {
    return liberalism;
  }

  public void setLiberalism(Double liberalism) {
    this.liberalism = liberalism;
  }

  public Openness adventurousness(Double adventurousness) {
    this.adventurousness = adventurousness;
    return this;
  }

   /**
   * Faceta de Aventura
   * @return adventurousness
  **/
  @ApiModelProperty(value = "Faceta de Aventura")
  public Double getAdventurousness() {
    return adventurousness;
  }

  public void setAdventurousness(Double adventurousness) {
    this.adventurousness = adventurousness;
  }

  public Openness intellect(Double intellect) {
    this.intellect = intellect;
    return this;
  }

   /**
   * Faceta de Curiosidade intelectual
   * @return intellect
  **/
  @ApiModelProperty(value = "Faceta de Curiosidade intelectual")
  public Double getIntellect() {
    return intellect;
  }

  public void setIntellect(Double intellect) {
    this.intellect = intellect;
  }

  public Openness dimensionValue(Double dimensionValue) {
    this.dimensionValue = dimensionValue;
    return this;
  }

   /**
   * Valor desta dimensão
   * @return dimensionValue
  **/
  @ApiModelProperty(value = "Valor desta dimensão")
  public Double getDimensionValue() {
    return dimensionValue;
  }

  public void setDimensionValue(Double dimensionValue) {
    this.dimensionValue = dimensionValue;
  }

  public Openness artisticInterests(Double artisticInterests) {
    this.artisticInterests = artisticInterests;
    return this;
  }

   /**
   * Faceta de Interesses artísticos
   * @return artisticInterests
  **/
  @ApiModelProperty(value = "Faceta de Interesses artísticos")
  public Double getArtisticInterests() {
    return artisticInterests;
  }

  public void setArtisticInterests(Double artisticInterests) {
    this.artisticInterests = artisticInterests;
  }

  public Openness emotionality(Double emotionality) {
    this.emotionality = emotionality;
    return this;
  }

   /**
   * Faceta de Consciência emocional
   * @return emotionality
  **/
  @ApiModelProperty(value = "Faceta de Consciência emocional")
  public Double getEmotionality() {
    return emotionality;
  }

  public void setEmotionality(Double emotionality) {
    this.emotionality = emotionality;
  }

  public Openness id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Identificador único da entidade.
   * @return id
  **/
  @ApiModelProperty(value = "Identificador único da entidade.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Openness imagination(Double imagination) {
    this.imagination = imagination;
    return this;
  }

   /**
   * Faceta de Imaginação
   * @return imagination
  **/
  @ApiModelProperty(value = "Faceta de Imaginação")
  public Double getImagination() {
    return imagination;
  }

  public void setImagination(Double imagination) {
    this.imagination = imagination;
  }

  public Openness bigFive(BigFive bigFive) {
    this.bigFive = bigFive;
    return this;
  }

   /**
   * Get bigFive
   * @return bigFive
  **/
  @ApiModelProperty(value = "")
  public BigFive getBigFive() {
    return bigFive;
  }

  public void setBigFive(BigFive bigFive) {
    this.bigFive = bigFive;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Openness openness = (Openness) o;
    return Objects.equals(this.liberalism, openness.liberalism) &&
        Objects.equals(this.adventurousness, openness.adventurousness) &&
        Objects.equals(this.intellect, openness.intellect) &&
        Objects.equals(this.dimensionValue, openness.dimensionValue) &&
        Objects.equals(this.artisticInterests, openness.artisticInterests) &&
        Objects.equals(this.emotionality, openness.emotionality) &&
        Objects.equals(this.id, openness.id) &&
        Objects.equals(this.imagination, openness.imagination) &&
        Objects.equals(this.bigFive, openness.bigFive);
  }

  @Override
  public int hashCode() {
    return Objects.hash(liberalism, adventurousness, intellect, dimensionValue, artisticInterests, emotionality, id, imagination, bigFive);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Openness {\n");
    
    sb.append("    liberalism: ").append(toIndentedString(liberalism)).append("\n");
    sb.append("    adventurousness: ").append(toIndentedString(adventurousness)).append("\n");
    sb.append("    intellect: ").append(toIndentedString(intellect)).append("\n");
    sb.append("    dimensionValue: ").append(toIndentedString(dimensionValue)).append("\n");
    sb.append("    artisticInterests: ").append(toIndentedString(artisticInterests)).append("\n");
    sb.append("    emotionality: ").append(toIndentedString(emotionality)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    imagination: ").append(toIndentedString(imagination)).append("\n");
    sb.append("    bigFive: ").append(toIndentedString(bigFive)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

