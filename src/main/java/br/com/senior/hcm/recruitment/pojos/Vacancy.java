/*
 * Recrutamento e Seleção
 * Serviço do Gestão de Recrutamento e Seleção.
 *
 * OpenAPI spec version: 15.11.0
 * Contact: seniorx-dev@senior.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package br.com.senior.hcm.recruitment.pojos;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import br.com.senior.hcm.recruitment.pojos.Chat;
import br.com.senior.hcm.recruitment.pojos.Company;
import br.com.senior.hcm.recruitment.pojos.ContractTypeDto;
import br.com.senior.hcm.recruitment.pojos.CostCenter;
import br.com.senior.hcm.recruitment.pojos.Department;
import br.com.senior.hcm.recruitment.pojos.EmployeeSummary;
import br.com.senior.hcm.recruitment.pojos.EmploymentContractDto;
import br.com.senior.hcm.recruitment.pojos.IntegrationStatusDto;
import br.com.senior.hcm.recruitment.pojos.JobPosition;
import br.com.senior.hcm.recruitment.pojos.PersonalityModelVacancy;
import br.com.senior.hcm.recruitment.pojos.ProcessTypeDto;
import br.com.senior.hcm.recruitment.pojos.SequenceStaffrequisitionVacancy;
import br.com.senior.hcm.recruitment.pojos.StaffRequisition;
import br.com.senior.hcm.recruitment.pojos.VacancyAdmissionSituationDto;
import br.com.senior.hcm.recruitment.pojos.VacancySituationDto;
import br.com.senior.hcm.recruitment.pojos.WorkShift;
import br.com.senior.hcm.recruitment.pojos.WorkstationGroup;
import java.io.IOException;
import org.threeten.bp.LocalDate;
import org.threeten.bp.OffsetDateTime;

/**
 * Vacancy
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-08-26T17:52:01.775Z")



public class Vacancy {
  @SerializedName("reason")
  private ProcessTypeDto reason = null;

  @SerializedName("finalizationComment")
  private String finalizationComment = null;

  @SerializedName("workstationGroup")
  private WorkstationGroup workstationGroup = null;

  @SerializedName("requisition")
  private StaffRequisition requisition = null;

  @SerializedName("contractType")
  private ContractTypeDto contractType = null;

  @SerializedName("externalStartDate")
  private LocalDate externalStartDate = null;

  @SerializedName("departmentId")
  private String departmentId = null;

  @SerializedName("createdAt")
  private OffsetDateTime createdAt = null;

  @SerializedName("admissionSituation")
  private VacancyAdmissionSituationDto admissionSituation = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("locationURI")
  private String locationURI = null;

  @SerializedName("requester")
  private EmployeeSummary requester = null;

  @SerializedName("workShift")
  private WorkShift workShift = null;

  @SerializedName("finalizationAttachmentId")
  private String finalizationAttachmentId = null;

  @SerializedName("admissionDate")
  private LocalDate admissionDate = null;

  @SerializedName("workstationGroupId")
  private String workstationGroupId = null;

  @SerializedName("requesterId")
  private String requesterId = null;

  @SerializedName("costCenter")
  private CostCenter costCenter = null;

  @SerializedName("pendencyHours")
  private Integer pendencyHours = null;

  @SerializedName("version")
  private String version = null;

  @SerializedName("jobPosition")
  private JobPosition jobPosition = null;

  @SerializedName("companyId")
  private String companyId = null;

  @SerializedName("endSalaryRange")
  private String endSalaryRange = null;

  @SerializedName("jobPositionId")
  private String jobPositionId = null;

  @SerializedName("sequenceStaffrequisitionVacancy")
  private SequenceStaffrequisitionVacancy sequenceStaffrequisitionVacancy = null;

  @SerializedName("replacedEmployee")
  private EmployeeSummary replacedEmployee = null;

  @SerializedName("integrationStatus")
  private IntegrationStatusDto integrationStatus = null;

  @SerializedName("workShiftId")
  private String workShiftId = null;

  @SerializedName("fileId")
  private String fileId = null;

  @SerializedName("questionnaire")
  private String questionnaire = null;

  @SerializedName("personalityModel")
  private PersonalityModelVacancy personalityModel = null;

  @SerializedName("employmentContract")
  private EmploymentContractDto employmentContract = null;

  @SerializedName("chatId")
  private String chatId = null;

  @SerializedName("externalPublish")
  private Boolean externalPublish = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("title")
  private String title = null;

  @SerializedName("requisitionId")
  private String requisitionId = null;

  @SerializedName("highlight")
  private Boolean highlight = null;

  @SerializedName("internalEndDate")
  private LocalDate internalEndDate = null;

  @SerializedName("costCenterId")
  private String costCenterId = null;

  @SerializedName("hasPendencyRegistered")
  private Boolean hasPendencyRegistered = null;

  @SerializedName("internalPublish")
  private Boolean internalPublish = null;

  @SerializedName("responsible")
  private EmployeeSummary responsible = null;

  @SerializedName("company")
  private Company company = null;

  @SerializedName("justification")
  private String justification = null;

  @SerializedName("department")
  private Department department = null;

  @SerializedName("situation")
  private VacancySituationDto situation = null;

  @SerializedName("startSalaryRange")
  private String startSalaryRange = null;

  @SerializedName("internalStartDate")
  private LocalDate internalStartDate = null;

  @SerializedName("externalEndDate")
  private LocalDate externalEndDate = null;

  @SerializedName("replacedEmployeeId")
  private String replacedEmployeeId = null;

  @SerializedName("pendingWithRequester")
  private Boolean pendingWithRequester = null;

  @SerializedName("hasCandidates")
  private Boolean hasCandidates = null;

  @SerializedName("sequenceStaffrequisitionVacancyId")
  private String sequenceStaffrequisitionVacancyId = null;

  @SerializedName("finalizedAt")
  private OffsetDateTime finalizedAt = null;

  @SerializedName("chat")
  private Chat chat = null;

  @SerializedName("progress")
  private Double progress = null;

  @SerializedName("location")
  private String location = null;

  public Vacancy reason(ProcessTypeDto reason) {
    this.reason = reason;
    return this;
  }

   /**
   * Get reason
   * @return reason
  **/
  @ApiModelProperty(value = "")
  public ProcessTypeDto getReason() {
    return reason;
  }

  public void setReason(ProcessTypeDto reason) {
    this.reason = reason;
  }

  public Vacancy finalizationComment(String finalizationComment) {
    this.finalizationComment = finalizationComment;
    return this;
  }

   /**
   * Comentário de conclusão
   * @return finalizationComment
  **/
  @ApiModelProperty(value = "Comentário de conclusão")
  public String getFinalizationComment() {
    return finalizationComment;
  }

  public void setFinalizationComment(String finalizationComment) {
    this.finalizationComment = finalizationComment;
  }

  public Vacancy workstationGroup(WorkstationGroup workstationGroup) {
    this.workstationGroup = workstationGroup;
    return this;
  }

   /**
   * Get workstationGroup
   * @return workstationGroup
  **/
  @ApiModelProperty(value = "")
  public WorkstationGroup getWorkstationGroup() {
    return workstationGroup;
  }

  public void setWorkstationGroup(WorkstationGroup workstationGroup) {
    this.workstationGroup = workstationGroup;
  }

  public Vacancy requisition(StaffRequisition requisition) {
    this.requisition = requisition;
    return this;
  }

   /**
   * Get requisition
   * @return requisition
  **/
  @ApiModelProperty(value = "")
  public StaffRequisition getRequisition() {
    return requisition;
  }

  public void setRequisition(StaffRequisition requisition) {
    this.requisition = requisition;
  }

  public Vacancy contractType(ContractTypeDto contractType) {
    this.contractType = contractType;
    return this;
  }

   /**
   * Get contractType
   * @return contractType
  **/
  @ApiModelProperty(value = "")
  public ContractTypeDto getContractType() {
    return contractType;
  }

  public void setContractType(ContractTypeDto contractType) {
    this.contractType = contractType;
  }

  public Vacancy externalStartDate(LocalDate externalStartDate) {
    this.externalStartDate = externalStartDate;
    return this;
  }

   /**
   * Data inicial da publicação da vaga para candidatos externos.
   * @return externalStartDate
  **/
  @ApiModelProperty(value = "Data inicial da publicação da vaga para candidatos externos.")
  public LocalDate getExternalStartDate() {
    return externalStartDate;
  }

  public void setExternalStartDate(LocalDate externalStartDate) {
    this.externalStartDate = externalStartDate;
  }

  public Vacancy departmentId(String departmentId) {
    this.departmentId = departmentId;
    return this;
  }

   /**
   * Identificador do departamento
   * @return departmentId
  **/
  @ApiModelProperty(value = "Identificador do departamento")
  public String getDepartmentId() {
    return departmentId;
  }

  public void setDepartmentId(String departmentId) {
    this.departmentId = departmentId;
  }

  public Vacancy createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Data de criação da vaga.
   * @return createdAt
  **/
  @ApiModelProperty(value = "Data de criação da vaga.")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public Vacancy admissionSituation(VacancyAdmissionSituationDto admissionSituation) {
    this.admissionSituation = admissionSituation;
    return this;
  }

   /**
   * Get admissionSituation
   * @return admissionSituation
  **/
  @ApiModelProperty(value = "")
  public VacancyAdmissionSituationDto getAdmissionSituation() {
    return admissionSituation;
  }

  public void setAdmissionSituation(VacancyAdmissionSituationDto admissionSituation) {
    this.admissionSituation = admissionSituation;
  }

  public Vacancy id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Identificador único da entidade.
   * @return id
  **/
  @ApiModelProperty(value = "Identificador único da entidade.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Vacancy locationURI(String locationURI) {
    this.locationURI = locationURI;
    return this;
  }

   /**
   * URL com o link do arquivo que contém o texto da publicação no BlobService.
   * @return locationURI
  **/
  @ApiModelProperty(value = "URL com o link do arquivo que contém o texto da publicação no BlobService.")
  public String getLocationURI() {
    return locationURI;
  }

  public void setLocationURI(String locationURI) {
    this.locationURI = locationURI;
  }

  public Vacancy requester(EmployeeSummary requester) {
    this.requester = requester;
    return this;
  }

   /**
   * Get requester
   * @return requester
  **/
  @ApiModelProperty(value = "")
  public EmployeeSummary getRequester() {
    return requester;
  }

  public void setRequester(EmployeeSummary requester) {
    this.requester = requester;
  }

  public Vacancy workShift(WorkShift workShift) {
    this.workShift = workShift;
    return this;
  }

   /**
   * Get workShift
   * @return workShift
  **/
  @ApiModelProperty(value = "")
  public WorkShift getWorkShift() {
    return workShift;
  }

  public void setWorkShift(WorkShift workShift) {
    this.workShift = workShift;
  }

  public Vacancy finalizationAttachmentId(String finalizationAttachmentId) {
    this.finalizationAttachmentId = finalizationAttachmentId;
    return this;
  }

   /**
   * Id do anexo de finalização da vaga
   * @return finalizationAttachmentId
  **/
  @ApiModelProperty(value = "Id do anexo de finalização da vaga")
  public String getFinalizationAttachmentId() {
    return finalizationAttachmentId;
  }

  public void setFinalizationAttachmentId(String finalizationAttachmentId) {
    this.finalizationAttachmentId = finalizationAttachmentId;
  }

  public Vacancy admissionDate(LocalDate admissionDate) {
    this.admissionDate = admissionDate;
    return this;
  }

   /**
   * Data prevista de admissão.
   * @return admissionDate
  **/
  @ApiModelProperty(value = "Data prevista de admissão.")
  public LocalDate getAdmissionDate() {
    return admissionDate;
  }

  public void setAdmissionDate(LocalDate admissionDate) {
    this.admissionDate = admissionDate;
  }

  public Vacancy workstationGroupId(String workstationGroupId) {
    this.workstationGroupId = workstationGroupId;
    return this;
  }

   /**
   * Identificador do posto de trabalho.
   * @return workstationGroupId
  **/
  @ApiModelProperty(value = "Identificador do posto de trabalho.")
  public String getWorkstationGroupId() {
    return workstationGroupId;
  }

  public void setWorkstationGroupId(String workstationGroupId) {
    this.workstationGroupId = workstationGroupId;
  }

  public Vacancy requesterId(String requesterId) {
    this.requesterId = requesterId;
    return this;
  }

   /**
   * ID do solicitante da vaga.
   * @return requesterId
  **/
  @ApiModelProperty(value = "ID do solicitante da vaga.")
  public String getRequesterId() {
    return requesterId;
  }

  public void setRequesterId(String requesterId) {
    this.requesterId = requesterId;
  }

  public Vacancy costCenter(CostCenter costCenter) {
    this.costCenter = costCenter;
    return this;
  }

   /**
   * Get costCenter
   * @return costCenter
  **/
  @ApiModelProperty(value = "")
  public CostCenter getCostCenter() {
    return costCenter;
  }

  public void setCostCenter(CostCenter costCenter) {
    this.costCenter = costCenter;
  }

  public Vacancy pendencyHours(Integer pendencyHours) {
    this.pendencyHours = pendencyHours;
    return this;
  }

   /**
   * Quantidade de horas que a vaga ficou pendente com o solicitante.
   * @return pendencyHours
  **/
  @ApiModelProperty(value = "Quantidade de horas que a vaga ficou pendente com o solicitante.")
  public Integer getPendencyHours() {
    return pendencyHours;
  }

  public void setPendencyHours(Integer pendencyHours) {
    this.pendencyHours = pendencyHours;
  }

  public Vacancy version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Versão do identificador do arquivo com o texto da publicação no BlobService.
   * @return version
  **/
  @ApiModelProperty(value = "Versão do identificador do arquivo com o texto da publicação no BlobService.")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public Vacancy jobPosition(JobPosition jobPosition) {
    this.jobPosition = jobPosition;
    return this;
  }

   /**
   * Get jobPosition
   * @return jobPosition
  **/
  @ApiModelProperty(value = "")
  public JobPosition getJobPosition() {
    return jobPosition;
  }

  public void setJobPosition(JobPosition jobPosition) {
    this.jobPosition = jobPosition;
  }

  public Vacancy companyId(String companyId) {
    this.companyId = companyId;
    return this;
  }

   /**
   * Identificador da empresa
   * @return companyId
  **/
  @ApiModelProperty(value = "Identificador da empresa")
  public String getCompanyId() {
    return companyId;
  }

  public void setCompanyId(String companyId) {
    this.companyId = companyId;
  }

  public Vacancy endSalaryRange(String endSalaryRange) {
    this.endSalaryRange = endSalaryRange;
    return this;
  }

   /**
   * Fim da faixa salarial.
   * @return endSalaryRange
  **/
  @ApiModelProperty(value = "Fim da faixa salarial.")
  public String getEndSalaryRange() {
    return endSalaryRange;
  }

  public void setEndSalaryRange(String endSalaryRange) {
    this.endSalaryRange = endSalaryRange;
  }

  public Vacancy jobPositionId(String jobPositionId) {
    this.jobPositionId = jobPositionId;
    return this;
  }

   /**
   * Identificador do cargo da vaga.
   * @return jobPositionId
  **/
  @ApiModelProperty(value = "Identificador do cargo da vaga.")
  public String getJobPositionId() {
    return jobPositionId;
  }

  public void setJobPositionId(String jobPositionId) {
    this.jobPositionId = jobPositionId;
  }

  public Vacancy sequenceStaffrequisitionVacancy(SequenceStaffrequisitionVacancy sequenceStaffrequisitionVacancy) {
    this.sequenceStaffrequisitionVacancy = sequenceStaffrequisitionVacancy;
    return this;
  }

   /**
   * Get sequenceStaffrequisitionVacancy
   * @return sequenceStaffrequisitionVacancy
  **/
  @ApiModelProperty(value = "")
  public SequenceStaffrequisitionVacancy getSequenceStaffrequisitionVacancy() {
    return sequenceStaffrequisitionVacancy;
  }

  public void setSequenceStaffrequisitionVacancy(SequenceStaffrequisitionVacancy sequenceStaffrequisitionVacancy) {
    this.sequenceStaffrequisitionVacancy = sequenceStaffrequisitionVacancy;
  }

  public Vacancy replacedEmployee(EmployeeSummary replacedEmployee) {
    this.replacedEmployee = replacedEmployee;
    return this;
  }

   /**
   * Get replacedEmployee
   * @return replacedEmployee
  **/
  @ApiModelProperty(value = "")
  public EmployeeSummary getReplacedEmployee() {
    return replacedEmployee;
  }

  public void setReplacedEmployee(EmployeeSummary replacedEmployee) {
    this.replacedEmployee = replacedEmployee;
  }

  public Vacancy integrationStatus(IntegrationStatusDto integrationStatus) {
    this.integrationStatus = integrationStatus;
    return this;
  }

   /**
   * Get integrationStatus
   * @return integrationStatus
  **/
  @ApiModelProperty(value = "")
  public IntegrationStatusDto getIntegrationStatus() {
    return integrationStatus;
  }

  public void setIntegrationStatus(IntegrationStatusDto integrationStatus) {
    this.integrationStatus = integrationStatus;
  }

  public Vacancy workShiftId(String workShiftId) {
    this.workShiftId = workShiftId;
    return this;
  }

   /**
   * Identificador do turno de trabalho
   * @return workShiftId
  **/
  @ApiModelProperty(value = "Identificador do turno de trabalho")
  public String getWorkShiftId() {
    return workShiftId;
  }

  public void setWorkShiftId(String workShiftId) {
    this.workShiftId = workShiftId;
  }

  public Vacancy fileId(String fileId) {
    this.fileId = fileId;
    return this;
  }

   /**
   * Identificador do arquivo com o texto da publicação no BlobService.
   * @return fileId
  **/
  @ApiModelProperty(value = "Identificador do arquivo com o texto da publicação no BlobService.")
  public String getFileId() {
    return fileId;
  }

  public void setFileId(String fileId) {
    this.fileId = fileId;
  }

  public Vacancy questionnaire(String questionnaire) {
    this.questionnaire = questionnaire;
    return this;
  }

   /**
   * Identificador do questionário
   * @return questionnaire
  **/
  @ApiModelProperty(value = "Identificador do questionário")
  public String getQuestionnaire() {
    return questionnaire;
  }

  public void setQuestionnaire(String questionnaire) {
    this.questionnaire = questionnaire;
  }

  public Vacancy personalityModel(PersonalityModelVacancy personalityModel) {
    this.personalityModel = personalityModel;
    return this;
  }

   /**
   * Get personalityModel
   * @return personalityModel
  **/
  @ApiModelProperty(value = "")
  public PersonalityModelVacancy getPersonalityModel() {
    return personalityModel;
  }

  public void setPersonalityModel(PersonalityModelVacancy personalityModel) {
    this.personalityModel = personalityModel;
  }

  public Vacancy employmentContract(EmploymentContractDto employmentContract) {
    this.employmentContract = employmentContract;
    return this;
  }

   /**
   * Get employmentContract
   * @return employmentContract
  **/
  @ApiModelProperty(value = "")
  public EmploymentContractDto getEmploymentContract() {
    return employmentContract;
  }

  public void setEmploymentContract(EmploymentContractDto employmentContract) {
    this.employmentContract = employmentContract;
  }

  public Vacancy chatId(String chatId) {
    this.chatId = chatId;
    return this;
  }

   /**
   * ID do chat da vaga.
   * @return chatId
  **/
  @ApiModelProperty(value = "ID do chat da vaga.")
  public String getChatId() {
    return chatId;
  }

  public void setChatId(String chatId) {
    this.chatId = chatId;
  }

  public Vacancy externalPublish(Boolean externalPublish) {
    this.externalPublish = externalPublish;
    return this;
  }

   /**
   * Indica se a vaga deve ser publicada para candidatos externos.
   * @return externalPublish
  **/
  @ApiModelProperty(value = "Indica se a vaga deve ser publicada para candidatos externos.")
  public Boolean isExternalPublish() {
    return externalPublish;
  }

  public void setExternalPublish(Boolean externalPublish) {
    this.externalPublish = externalPublish;
  }

  public Vacancy description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Descrição da vaga.
   * @return description
  **/
  @ApiModelProperty(value = "Descrição da vaga.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Vacancy title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Título da vaga.
   * @return title
  **/
  @ApiModelProperty(value = "Título da vaga.")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public Vacancy requisitionId(String requisitionId) {
    this.requisitionId = requisitionId;
    return this;
  }

   /**
   * Id da requisição da vaga.
   * @return requisitionId
  **/
  @ApiModelProperty(value = "Id da requisição da vaga.")
  public String getRequisitionId() {
    return requisitionId;
  }

  public void setRequisitionId(String requisitionId) {
    this.requisitionId = requisitionId;
  }

  public Vacancy highlight(Boolean highlight) {
    this.highlight = highlight;
    return this;
  }

   /**
   * Indica se a vaga deve estar em destaque.
   * @return highlight
  **/
  @ApiModelProperty(value = "Indica se a vaga deve estar em destaque.")
  public Boolean isHighlight() {
    return highlight;
  }

  public void setHighlight(Boolean highlight) {
    this.highlight = highlight;
  }

  public Vacancy internalEndDate(LocalDate internalEndDate) {
    this.internalEndDate = internalEndDate;
    return this;
  }

   /**
   * Data final da publicação da vaga para candidatos internos.
   * @return internalEndDate
  **/
  @ApiModelProperty(value = "Data final da publicação da vaga para candidatos internos.")
  public LocalDate getInternalEndDate() {
    return internalEndDate;
  }

  public void setInternalEndDate(LocalDate internalEndDate) {
    this.internalEndDate = internalEndDate;
  }

  public Vacancy costCenterId(String costCenterId) {
    this.costCenterId = costCenterId;
    return this;
  }

   /**
   * Identificador do centro de custo
   * @return costCenterId
  **/
  @ApiModelProperty(value = "Identificador do centro de custo")
  public String getCostCenterId() {
    return costCenterId;
  }

  public void setCostCenterId(String costCenterId) {
    this.costCenterId = costCenterId;
  }

  public Vacancy hasPendencyRegistered(Boolean hasPendencyRegistered) {
    this.hasPendencyRegistered = hasPendencyRegistered;
    return this;
  }

   /**
   * Indica se a vaga possui alguma pendência registrada.
   * @return hasPendencyRegistered
  **/
  @ApiModelProperty(value = "Indica se a vaga possui alguma pendência registrada.")
  public Boolean isHasPendencyRegistered() {
    return hasPendencyRegistered;
  }

  public void setHasPendencyRegistered(Boolean hasPendencyRegistered) {
    this.hasPendencyRegistered = hasPendencyRegistered;
  }

  public Vacancy internalPublish(Boolean internalPublish) {
    this.internalPublish = internalPublish;
    return this;
  }

   /**
   * Indica se a vaga deve ser publicada para candidatos internos.
   * @return internalPublish
  **/
  @ApiModelProperty(value = "Indica se a vaga deve ser publicada para candidatos internos.")
  public Boolean isInternalPublish() {
    return internalPublish;
  }

  public void setInternalPublish(Boolean internalPublish) {
    this.internalPublish = internalPublish;
  }

  public Vacancy responsible(EmployeeSummary responsible) {
    this.responsible = responsible;
    return this;
  }

   /**
   * Get responsible
   * @return responsible
  **/
  @ApiModelProperty(value = "")
  public EmployeeSummary getResponsible() {
    return responsible;
  }

  public void setResponsible(EmployeeSummary responsible) {
    this.responsible = responsible;
  }

  public Vacancy company(Company company) {
    this.company = company;
    return this;
  }

   /**
   * Get company
   * @return company
  **/
  @ApiModelProperty(value = "")
  public Company getCompany() {
    return company;
  }

  public void setCompany(Company company) {
    this.company = company;
  }

  public Vacancy justification(String justification) {
    this.justification = justification;
    return this;
  }

   /**
   * Justificativa para a abertura da vaga.
   * @return justification
  **/
  @ApiModelProperty(value = "Justificativa para a abertura da vaga.")
  public String getJustification() {
    return justification;
  }

  public void setJustification(String justification) {
    this.justification = justification;
  }

  public Vacancy department(Department department) {
    this.department = department;
    return this;
  }

   /**
   * Get department
   * @return department
  **/
  @ApiModelProperty(value = "")
  public Department getDepartment() {
    return department;
  }

  public void setDepartment(Department department) {
    this.department = department;
  }

  public Vacancy situation(VacancySituationDto situation) {
    this.situation = situation;
    return this;
  }

   /**
   * Get situation
   * @return situation
  **/
  @ApiModelProperty(value = "")
  public VacancySituationDto getSituation() {
    return situation;
  }

  public void setSituation(VacancySituationDto situation) {
    this.situation = situation;
  }

  public Vacancy startSalaryRange(String startSalaryRange) {
    this.startSalaryRange = startSalaryRange;
    return this;
  }

   /**
   * Início da faixa salarial.
   * @return startSalaryRange
  **/
  @ApiModelProperty(value = "Início da faixa salarial.")
  public String getStartSalaryRange() {
    return startSalaryRange;
  }

  public void setStartSalaryRange(String startSalaryRange) {
    this.startSalaryRange = startSalaryRange;
  }

  public Vacancy internalStartDate(LocalDate internalStartDate) {
    this.internalStartDate = internalStartDate;
    return this;
  }

   /**
   * Data inicial da publicação da vaga para candidatos internos.
   * @return internalStartDate
  **/
  @ApiModelProperty(value = "Data inicial da publicação da vaga para candidatos internos.")
  public LocalDate getInternalStartDate() {
    return internalStartDate;
  }

  public void setInternalStartDate(LocalDate internalStartDate) {
    this.internalStartDate = internalStartDate;
  }

  public Vacancy externalEndDate(LocalDate externalEndDate) {
    this.externalEndDate = externalEndDate;
    return this;
  }

   /**
   * Data final da publicação da vaga para candidatos externos.
   * @return externalEndDate
  **/
  @ApiModelProperty(value = "Data final da publicação da vaga para candidatos externos.")
  public LocalDate getExternalEndDate() {
    return externalEndDate;
  }

  public void setExternalEndDate(LocalDate externalEndDate) {
    this.externalEndDate = externalEndDate;
  }

  public Vacancy replacedEmployeeId(String replacedEmployeeId) {
    this.replacedEmployeeId = replacedEmployeeId;
    return this;
  }

   /**
   * ID do colaborador que será substituido (Se for o caso).
   * @return replacedEmployeeId
  **/
  @ApiModelProperty(value = "ID do colaborador que será substituido (Se for o caso).")
  public String getReplacedEmployeeId() {
    return replacedEmployeeId;
  }

  public void setReplacedEmployeeId(String replacedEmployeeId) {
    this.replacedEmployeeId = replacedEmployeeId;
  }

  public Vacancy pendingWithRequester(Boolean pendingWithRequester) {
    this.pendingWithRequester = pendingWithRequester;
    return this;
  }

   /**
   * Indica que a vaga está pendente com o solicitante.
   * @return pendingWithRequester
  **/
  @ApiModelProperty(value = "Indica que a vaga está pendente com o solicitante.")
  public Boolean isPendingWithRequester() {
    return pendingWithRequester;
  }

  public void setPendingWithRequester(Boolean pendingWithRequester) {
    this.pendingWithRequester = pendingWithRequester;
  }

  public Vacancy hasCandidates(Boolean hasCandidates) {
    this.hasCandidates = hasCandidates;
    return this;
  }

   /**
   * Indica se a vaga já possui candidatos.
   * @return hasCandidates
  **/
  @ApiModelProperty(value = "Indica se a vaga já possui candidatos.")
  public Boolean isHasCandidates() {
    return hasCandidates;
  }

  public void setHasCandidates(Boolean hasCandidates) {
    this.hasCandidates = hasCandidates;
  }

  public Vacancy sequenceStaffrequisitionVacancyId(String sequenceStaffrequisitionVacancyId) {
    this.sequenceStaffrequisitionVacancyId = sequenceStaffrequisitionVacancyId;
    return this;
  }

   /**
   * Identificador do responsável por armazenar uma sequência única da RP na vaga.
   * @return sequenceStaffrequisitionVacancyId
  **/
  @ApiModelProperty(value = "Identificador do responsável por armazenar uma sequência única da RP na vaga.")
  public String getSequenceStaffrequisitionVacancyId() {
    return sequenceStaffrequisitionVacancyId;
  }

  public void setSequenceStaffrequisitionVacancyId(String sequenceStaffrequisitionVacancyId) {
    this.sequenceStaffrequisitionVacancyId = sequenceStaffrequisitionVacancyId;
  }

  public Vacancy finalizedAt(OffsetDateTime finalizedAt) {
    this.finalizedAt = finalizedAt;
    return this;
  }

   /**
   * Data e hora de conclusão da vaga
   * @return finalizedAt
  **/
  @ApiModelProperty(value = "Data e hora de conclusão da vaga")
  public OffsetDateTime getFinalizedAt() {
    return finalizedAt;
  }

  public void setFinalizedAt(OffsetDateTime finalizedAt) {
    this.finalizedAt = finalizedAt;
  }

  public Vacancy chat(Chat chat) {
    this.chat = chat;
    return this;
  }

   /**
   * Get chat
   * @return chat
  **/
  @ApiModelProperty(value = "")
  public Chat getChat() {
    return chat;
  }

  public void setChat(Chat chat) {
    this.chat = chat;
  }

  public Vacancy progress(Double progress) {
    this.progress = progress;
    return this;
  }

   /**
   * Progresso da vaga.
   * @return progress
  **/
  @ApiModelProperty(value = "Progresso da vaga.")
  public Double getProgress() {
    return progress;
  }

  public void setProgress(Double progress) {
    this.progress = progress;
  }

  public Vacancy location(String location) {
    this.location = location;
    return this;
  }

   /**
   * Local da vaga.
   * @return location
  **/
  @ApiModelProperty(value = "Local da vaga.")
  public String getLocation() {
    return location;
  }

  public void setLocation(String location) {
    this.location = location;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Vacancy vacancy = (Vacancy) o;
    return Objects.equals(this.reason, vacancy.reason) &&
        Objects.equals(this.finalizationComment, vacancy.finalizationComment) &&
        Objects.equals(this.workstationGroup, vacancy.workstationGroup) &&
        Objects.equals(this.requisition, vacancy.requisition) &&
        Objects.equals(this.contractType, vacancy.contractType) &&
        Objects.equals(this.externalStartDate, vacancy.externalStartDate) &&
        Objects.equals(this.departmentId, vacancy.departmentId) &&
        Objects.equals(this.createdAt, vacancy.createdAt) &&
        Objects.equals(this.admissionSituation, vacancy.admissionSituation) &&
        Objects.equals(this.id, vacancy.id) &&
        Objects.equals(this.locationURI, vacancy.locationURI) &&
        Objects.equals(this.requester, vacancy.requester) &&
        Objects.equals(this.workShift, vacancy.workShift) &&
        Objects.equals(this.finalizationAttachmentId, vacancy.finalizationAttachmentId) &&
        Objects.equals(this.admissionDate, vacancy.admissionDate) &&
        Objects.equals(this.workstationGroupId, vacancy.workstationGroupId) &&
        Objects.equals(this.requesterId, vacancy.requesterId) &&
        Objects.equals(this.costCenter, vacancy.costCenter) &&
        Objects.equals(this.pendencyHours, vacancy.pendencyHours) &&
        Objects.equals(this.version, vacancy.version) &&
        Objects.equals(this.jobPosition, vacancy.jobPosition) &&
        Objects.equals(this.companyId, vacancy.companyId) &&
        Objects.equals(this.endSalaryRange, vacancy.endSalaryRange) &&
        Objects.equals(this.jobPositionId, vacancy.jobPositionId) &&
        Objects.equals(this.sequenceStaffrequisitionVacancy, vacancy.sequenceStaffrequisitionVacancy) &&
        Objects.equals(this.replacedEmployee, vacancy.replacedEmployee) &&
        Objects.equals(this.integrationStatus, vacancy.integrationStatus) &&
        Objects.equals(this.workShiftId, vacancy.workShiftId) &&
        Objects.equals(this.fileId, vacancy.fileId) &&
        Objects.equals(this.questionnaire, vacancy.questionnaire) &&
        Objects.equals(this.personalityModel, vacancy.personalityModel) &&
        Objects.equals(this.employmentContract, vacancy.employmentContract) &&
        Objects.equals(this.chatId, vacancy.chatId) &&
        Objects.equals(this.externalPublish, vacancy.externalPublish) &&
        Objects.equals(this.description, vacancy.description) &&
        Objects.equals(this.title, vacancy.title) &&
        Objects.equals(this.requisitionId, vacancy.requisitionId) &&
        Objects.equals(this.highlight, vacancy.highlight) &&
        Objects.equals(this.internalEndDate, vacancy.internalEndDate) &&
        Objects.equals(this.costCenterId, vacancy.costCenterId) &&
        Objects.equals(this.hasPendencyRegistered, vacancy.hasPendencyRegistered) &&
        Objects.equals(this.internalPublish, vacancy.internalPublish) &&
        Objects.equals(this.responsible, vacancy.responsible) &&
        Objects.equals(this.company, vacancy.company) &&
        Objects.equals(this.justification, vacancy.justification) &&
        Objects.equals(this.department, vacancy.department) &&
        Objects.equals(this.situation, vacancy.situation) &&
        Objects.equals(this.startSalaryRange, vacancy.startSalaryRange) &&
        Objects.equals(this.internalStartDate, vacancy.internalStartDate) &&
        Objects.equals(this.externalEndDate, vacancy.externalEndDate) &&
        Objects.equals(this.replacedEmployeeId, vacancy.replacedEmployeeId) &&
        Objects.equals(this.pendingWithRequester, vacancy.pendingWithRequester) &&
        Objects.equals(this.hasCandidates, vacancy.hasCandidates) &&
        Objects.equals(this.sequenceStaffrequisitionVacancyId, vacancy.sequenceStaffrequisitionVacancyId) &&
        Objects.equals(this.finalizedAt, vacancy.finalizedAt) &&
        Objects.equals(this.chat, vacancy.chat) &&
        Objects.equals(this.progress, vacancy.progress) &&
        Objects.equals(this.location, vacancy.location);
  }

  @Override
  public int hashCode() {
    return Objects.hash(reason, finalizationComment, workstationGroup, requisition, contractType, externalStartDate, departmentId, createdAt, admissionSituation, id, locationURI, requester, workShift, finalizationAttachmentId, admissionDate, workstationGroupId, requesterId, costCenter, pendencyHours, version, jobPosition, companyId, endSalaryRange, jobPositionId, sequenceStaffrequisitionVacancy, replacedEmployee, integrationStatus, workShiftId, fileId, questionnaire, personalityModel, employmentContract, chatId, externalPublish, description, title, requisitionId, highlight, internalEndDate, costCenterId, hasPendencyRegistered, internalPublish, responsible, company, justification, department, situation, startSalaryRange, internalStartDate, externalEndDate, replacedEmployeeId, pendingWithRequester, hasCandidates, sequenceStaffrequisitionVacancyId, finalizedAt, chat, progress, location);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Vacancy {\n");
    
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    finalizationComment: ").append(toIndentedString(finalizationComment)).append("\n");
    sb.append("    workstationGroup: ").append(toIndentedString(workstationGroup)).append("\n");
    sb.append("    requisition: ").append(toIndentedString(requisition)).append("\n");
    sb.append("    contractType: ").append(toIndentedString(contractType)).append("\n");
    sb.append("    externalStartDate: ").append(toIndentedString(externalStartDate)).append("\n");
    sb.append("    departmentId: ").append(toIndentedString(departmentId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    admissionSituation: ").append(toIndentedString(admissionSituation)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    locationURI: ").append(toIndentedString(locationURI)).append("\n");
    sb.append("    requester: ").append(toIndentedString(requester)).append("\n");
    sb.append("    workShift: ").append(toIndentedString(workShift)).append("\n");
    sb.append("    finalizationAttachmentId: ").append(toIndentedString(finalizationAttachmentId)).append("\n");
    sb.append("    admissionDate: ").append(toIndentedString(admissionDate)).append("\n");
    sb.append("    workstationGroupId: ").append(toIndentedString(workstationGroupId)).append("\n");
    sb.append("    requesterId: ").append(toIndentedString(requesterId)).append("\n");
    sb.append("    costCenter: ").append(toIndentedString(costCenter)).append("\n");
    sb.append("    pendencyHours: ").append(toIndentedString(pendencyHours)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    jobPosition: ").append(toIndentedString(jobPosition)).append("\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    endSalaryRange: ").append(toIndentedString(endSalaryRange)).append("\n");
    sb.append("    jobPositionId: ").append(toIndentedString(jobPositionId)).append("\n");
    sb.append("    sequenceStaffrequisitionVacancy: ").append(toIndentedString(sequenceStaffrequisitionVacancy)).append("\n");
    sb.append("    replacedEmployee: ").append(toIndentedString(replacedEmployee)).append("\n");
    sb.append("    integrationStatus: ").append(toIndentedString(integrationStatus)).append("\n");
    sb.append("    workShiftId: ").append(toIndentedString(workShiftId)).append("\n");
    sb.append("    fileId: ").append(toIndentedString(fileId)).append("\n");
    sb.append("    questionnaire: ").append(toIndentedString(questionnaire)).append("\n");
    sb.append("    personalityModel: ").append(toIndentedString(personalityModel)).append("\n");
    sb.append("    employmentContract: ").append(toIndentedString(employmentContract)).append("\n");
    sb.append("    chatId: ").append(toIndentedString(chatId)).append("\n");
    sb.append("    externalPublish: ").append(toIndentedString(externalPublish)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    requisitionId: ").append(toIndentedString(requisitionId)).append("\n");
    sb.append("    highlight: ").append(toIndentedString(highlight)).append("\n");
    sb.append("    internalEndDate: ").append(toIndentedString(internalEndDate)).append("\n");
    sb.append("    costCenterId: ").append(toIndentedString(costCenterId)).append("\n");
    sb.append("    hasPendencyRegistered: ").append(toIndentedString(hasPendencyRegistered)).append("\n");
    sb.append("    internalPublish: ").append(toIndentedString(internalPublish)).append("\n");
    sb.append("    responsible: ").append(toIndentedString(responsible)).append("\n");
    sb.append("    company: ").append(toIndentedString(company)).append("\n");
    sb.append("    justification: ").append(toIndentedString(justification)).append("\n");
    sb.append("    department: ").append(toIndentedString(department)).append("\n");
    sb.append("    situation: ").append(toIndentedString(situation)).append("\n");
    sb.append("    startSalaryRange: ").append(toIndentedString(startSalaryRange)).append("\n");
    sb.append("    internalStartDate: ").append(toIndentedString(internalStartDate)).append("\n");
    sb.append("    externalEndDate: ").append(toIndentedString(externalEndDate)).append("\n");
    sb.append("    replacedEmployeeId: ").append(toIndentedString(replacedEmployeeId)).append("\n");
    sb.append("    pendingWithRequester: ").append(toIndentedString(pendingWithRequester)).append("\n");
    sb.append("    hasCandidates: ").append(toIndentedString(hasCandidates)).append("\n");
    sb.append("    sequenceStaffrequisitionVacancyId: ").append(toIndentedString(sequenceStaffrequisitionVacancyId)).append("\n");
    sb.append("    finalizedAt: ").append(toIndentedString(finalizedAt)).append("\n");
    sb.append("    chat: ").append(toIndentedString(chat)).append("\n");
    sb.append("    progress: ").append(toIndentedString(progress)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

