/*
 * Recrutamento e Seleção
 * Serviço do Gestão de Recrutamento e Seleção.
 *
 * OpenAPI spec version: 15.11.0
 * Contact: seniorx-dev@senior.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package br.com.senior.hcm.recruitment.pojos;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import br.com.senior.hcm.recruitment.pojos.Answer;
import java.io.IOException;

/**
 * Question
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-08-26T17:52:01.775Z")



public class Question {
  @SerializedName("orderNumber")
  private Integer orderNumber = null;

  @SerializedName("answer")
  private Answer answer = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("personalityQuizId")
  private String personalityQuizId = null;

  @SerializedName("questionType")
  private String questionType = null;

  public Question orderNumber(Integer orderNumber) {
    this.orderNumber = orderNumber;
    return this;
  }

   /**
   * Numero de Ordenação da questão
   * @return orderNumber
  **/
  @ApiModelProperty(value = "Numero de Ordenação da questão")
  public Integer getOrderNumber() {
    return orderNumber;
  }

  public void setOrderNumber(Integer orderNumber) {
    this.orderNumber = orderNumber;
  }

  public Question answer(Answer answer) {
    this.answer = answer;
    return this;
  }

   /**
   * Get answer
   * @return answer
  **/
  @ApiModelProperty(value = "")
  public Answer getAnswer() {
    return answer;
  }

  public void setAnswer(Answer answer) {
    this.answer = answer;
  }

  public Question description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Descrição da pergunta.
   * @return description
  **/
  @ApiModelProperty(value = "Descrição da pergunta.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Question id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Identificador único da entidade.
   * @return id
  **/
  @ApiModelProperty(value = "Identificador único da entidade.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Question personalityQuizId(String personalityQuizId) {
    this.personalityQuizId = personalityQuizId;
    return this;
  }

   /**
   * Questionário utilizado para identificar a personalidade de um candidato.
   * @return personalityQuizId
  **/
  @ApiModelProperty(value = "Questionário utilizado para identificar a personalidade de um candidato.")
  public String getPersonalityQuizId() {
    return personalityQuizId;
  }

  public void setPersonalityQuizId(String personalityQuizId) {
    this.personalityQuizId = personalityQuizId;
  }

  public Question questionType(String questionType) {
    this.questionType = questionType;
    return this;
  }

   /**
   * Tipo do Registro
   * @return questionType
  **/
  @ApiModelProperty(value = "Tipo do Registro")
  public String getQuestionType() {
    return questionType;
  }

  public void setQuestionType(String questionType) {
    this.questionType = questionType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Question question = (Question) o;
    return Objects.equals(this.orderNumber, question.orderNumber) &&
        Objects.equals(this.answer, question.answer) &&
        Objects.equals(this.description, question.description) &&
        Objects.equals(this.id, question.id) &&
        Objects.equals(this.personalityQuizId, question.personalityQuizId) &&
        Objects.equals(this.questionType, question.questionType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(orderNumber, answer, description, id, personalityQuizId, questionType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Question {\n");
    
    sb.append("    orderNumber: ").append(toIndentedString(orderNumber)).append("\n");
    sb.append("    answer: ").append(toIndentedString(answer)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    personalityQuizId: ").append(toIndentedString(personalityQuizId)).append("\n");
    sb.append("    questionType: ").append(toIndentedString(questionType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

