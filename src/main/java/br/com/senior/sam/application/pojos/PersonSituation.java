/*
 * Aplicação
 * Serviço do backend da aplicação do Ronda senior X
 *
 * OpenAPI spec version: 4.7.0
 * Contact: seniorx-dev@senior.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package br.com.senior.sam.application.pojos;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import br.com.senior.sam.application.pojos.Person;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * PersonSituation
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-08-24T13:38:01.755Z")



public class PersonSituation {
  @SerializedName("blockDate")
  private OffsetDateTime blockDate = null;

  @SerializedName("person")
  private Person person = null;

  @SerializedName("unblockJustification")
  private String unblockJustification = null;

  @SerializedName("id")
  private Integer id = null;

  @SerializedName("unblockProcedure")
  private String unblockProcedure = null;

  @SerializedName("blockReason")
  private String blockReason = null;

  @SerializedName("unblockDate")
  private OffsetDateTime unblockDate = null;

  public PersonSituation blockDate(OffsetDateTime blockDate) {
    this.blockDate = blockDate;
    return this;
  }

   /**
   * Data do Bloqueio
   * @return blockDate
  **/
  @ApiModelProperty(value = "Data do Bloqueio")
  public OffsetDateTime getBlockDate() {
    return blockDate;
  }

  public void setBlockDate(OffsetDateTime blockDate) {
    this.blockDate = blockDate;
  }

  public PersonSituation person(Person person) {
    this.person = person;
    return this;
  }

   /**
   * Get person
   * @return person
  **/
  @ApiModelProperty(value = "")
  public Person getPerson() {
    return person;
  }

  public void setPerson(Person person) {
    this.person = person;
  }

  public PersonSituation unblockJustification(String unblockJustification) {
    this.unblockJustification = unblockJustification;
    return this;
  }

   /**
   * Justificativa do Desbloqueio
   * @return unblockJustification
  **/
  @ApiModelProperty(value = "Justificativa do Desbloqueio")
  public String getUnblockJustification() {
    return unblockJustification;
  }

  public void setUnblockJustification(String unblockJustification) {
    this.unblockJustification = unblockJustification;
  }

  public PersonSituation id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * ID
   * @return id
  **/
  @ApiModelProperty(value = "ID")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public PersonSituation unblockProcedure(String unblockProcedure) {
    this.unblockProcedure = unblockProcedure;
    return this;
  }

   /**
   * Procedimento de Desbloqueio
   * @return unblockProcedure
  **/
  @ApiModelProperty(value = "Procedimento de Desbloqueio")
  public String getUnblockProcedure() {
    return unblockProcedure;
  }

  public void setUnblockProcedure(String unblockProcedure) {
    this.unblockProcedure = unblockProcedure;
  }

  public PersonSituation blockReason(String blockReason) {
    this.blockReason = blockReason;
    return this;
  }

   /**
   * Motivo do Bloqueio
   * @return blockReason
  **/
  @ApiModelProperty(value = "Motivo do Bloqueio")
  public String getBlockReason() {
    return blockReason;
  }

  public void setBlockReason(String blockReason) {
    this.blockReason = blockReason;
  }

  public PersonSituation unblockDate(OffsetDateTime unblockDate) {
    this.unblockDate = unblockDate;
    return this;
  }

   /**
   * Data do Desbloqueio
   * @return unblockDate
  **/
  @ApiModelProperty(value = "Data do Desbloqueio")
  public OffsetDateTime getUnblockDate() {
    return unblockDate;
  }

  public void setUnblockDate(OffsetDateTime unblockDate) {
    this.unblockDate = unblockDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PersonSituation personSituation = (PersonSituation) o;
    return Objects.equals(this.blockDate, personSituation.blockDate) &&
        Objects.equals(this.person, personSituation.person) &&
        Objects.equals(this.unblockJustification, personSituation.unblockJustification) &&
        Objects.equals(this.id, personSituation.id) &&
        Objects.equals(this.unblockProcedure, personSituation.unblockProcedure) &&
        Objects.equals(this.blockReason, personSituation.blockReason) &&
        Objects.equals(this.unblockDate, personSituation.unblockDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(blockDate, person, unblockJustification, id, unblockProcedure, blockReason, unblockDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PersonSituation {\n");
    
    sb.append("    blockDate: ").append(toIndentedString(blockDate)).append("\n");
    sb.append("    person: ").append(toIndentedString(person)).append("\n");
    sb.append("    unblockJustification: ").append(toIndentedString(unblockJustification)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    unblockProcedure: ").append(toIndentedString(unblockProcedure)).append("\n");
    sb.append("    blockReason: ").append(toIndentedString(blockReason)).append("\n");
    sb.append("    unblockDate: ").append(toIndentedString(unblockDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

