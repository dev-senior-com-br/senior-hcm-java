/*
 * Aplicação
 * Serviço do backend da aplicação do Ronda senior X
 *
 * OpenAPI spec version: 4.7.0
 * Contact: seniorx-dev@senior.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package br.com.senior.sam.application.pojos;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import br.com.senior.sam.application.pojos.Group;
import br.com.senior.sam.application.pojos.PhysicalLocation;
import br.com.senior.sam.application.pojos.VirtualLobbyAction;
import br.com.senior.sam.application.pojos.VirtualLobbyCamera;
import br.com.senior.sam.application.pojos.VirtualLobbyDevice;
import br.com.senior.sam.application.pojos.VirtualLobbySituation;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * VirtualLobby
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-08-24T13:38:01.755Z")



public class VirtualLobby {
  @SerializedName("cameras")
  private List<VirtualLobbyCamera> cameras = null;

  @SerializedName("destinationPhysicalLocation")
  private PhysicalLocation destinationPhysicalLocation = null;

  @SerializedName("physicalLocation")
  private PhysicalLocation physicalLocation = null;

  @SerializedName("devices")
  private List<VirtualLobbyDevice> devices = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("id")
  private Integer id = null;

  @SerializedName("originPhysicalLocation")
  private PhysicalLocation originPhysicalLocation = null;

  @SerializedName("actions")
  private List<VirtualLobbyAction> actions = null;

  @SerializedName("situation")
  private VirtualLobbySituation situation = null;

  @SerializedName("group")
  private Group group = null;

  public VirtualLobby cameras(List<VirtualLobbyCamera> cameras) {
    this.cameras = cameras;
    return this;
  }

  public VirtualLobby addCamerasItem(VirtualLobbyCamera camerasItem) {
    if (this.cameras == null) {
      this.cameras = new ArrayList<VirtualLobbyCamera>();
    }
    this.cameras.add(camerasItem);
    return this;
  }

   /**
   * Câmeras da Portaria Virtual
   * @return cameras
  **/
  @ApiModelProperty(value = "Câmeras da Portaria Virtual")
  public List<VirtualLobbyCamera> getCameras() {
    return cameras;
  }

  public void setCameras(List<VirtualLobbyCamera> cameras) {
    this.cameras = cameras;
  }

  public VirtualLobby destinationPhysicalLocation(PhysicalLocation destinationPhysicalLocation) {
    this.destinationPhysicalLocation = destinationPhysicalLocation;
    return this;
  }

   /**
   * Get destinationPhysicalLocation
   * @return destinationPhysicalLocation
  **/
  @ApiModelProperty(value = "")
  public PhysicalLocation getDestinationPhysicalLocation() {
    return destinationPhysicalLocation;
  }

  public void setDestinationPhysicalLocation(PhysicalLocation destinationPhysicalLocation) {
    this.destinationPhysicalLocation = destinationPhysicalLocation;
  }

  public VirtualLobby physicalLocation(PhysicalLocation physicalLocation) {
    this.physicalLocation = physicalLocation;
    return this;
  }

   /**
   * Get physicalLocation
   * @return physicalLocation
  **/
  @ApiModelProperty(value = "")
  public PhysicalLocation getPhysicalLocation() {
    return physicalLocation;
  }

  public void setPhysicalLocation(PhysicalLocation physicalLocation) {
    this.physicalLocation = physicalLocation;
  }

  public VirtualLobby devices(List<VirtualLobbyDevice> devices) {
    this.devices = devices;
    return this;
  }

  public VirtualLobby addDevicesItem(VirtualLobbyDevice devicesItem) {
    if (this.devices == null) {
      this.devices = new ArrayList<VirtualLobbyDevice>();
    }
    this.devices.add(devicesItem);
    return this;
  }

   /**
   * Dispositivos da Portaria Virtual
   * @return devices
  **/
  @ApiModelProperty(value = "Dispositivos da Portaria Virtual")
  public List<VirtualLobbyDevice> getDevices() {
    return devices;
  }

  public void setDevices(List<VirtualLobbyDevice> devices) {
    this.devices = devices;
  }

  public VirtualLobby name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Nome
   * @return name
  **/
  @ApiModelProperty(value = "Nome")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public VirtualLobby description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Descrição
   * @return description
  **/
  @ApiModelProperty(value = "Descrição")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public VirtualLobby id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * ID
   * @return id
  **/
  @ApiModelProperty(value = "ID")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public VirtualLobby originPhysicalLocation(PhysicalLocation originPhysicalLocation) {
    this.originPhysicalLocation = originPhysicalLocation;
    return this;
  }

   /**
   * Get originPhysicalLocation
   * @return originPhysicalLocation
  **/
  @ApiModelProperty(value = "")
  public PhysicalLocation getOriginPhysicalLocation() {
    return originPhysicalLocation;
  }

  public void setOriginPhysicalLocation(PhysicalLocation originPhysicalLocation) {
    this.originPhysicalLocation = originPhysicalLocation;
  }

  public VirtualLobby actions(List<VirtualLobbyAction> actions) {
    this.actions = actions;
    return this;
  }

  public VirtualLobby addActionsItem(VirtualLobbyAction actionsItem) {
    if (this.actions == null) {
      this.actions = new ArrayList<VirtualLobbyAction>();
    }
    this.actions.add(actionsItem);
    return this;
  }

   /**
   * Acionamentos da Portaria Virtual
   * @return actions
  **/
  @ApiModelProperty(value = "Acionamentos da Portaria Virtual")
  public List<VirtualLobbyAction> getActions() {
    return actions;
  }

  public void setActions(List<VirtualLobbyAction> actions) {
    this.actions = actions;
  }

  public VirtualLobby situation(VirtualLobbySituation situation) {
    this.situation = situation;
    return this;
  }

   /**
   * Get situation
   * @return situation
  **/
  @ApiModelProperty(value = "")
  public VirtualLobbySituation getSituation() {
    return situation;
  }

  public void setSituation(VirtualLobbySituation situation) {
    this.situation = situation;
  }

  public VirtualLobby group(Group group) {
    this.group = group;
    return this;
  }

   /**
   * Get group
   * @return group
  **/
  @ApiModelProperty(value = "")
  public Group getGroup() {
    return group;
  }

  public void setGroup(Group group) {
    this.group = group;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VirtualLobby virtualLobby = (VirtualLobby) o;
    return Objects.equals(this.cameras, virtualLobby.cameras) &&
        Objects.equals(this.destinationPhysicalLocation, virtualLobby.destinationPhysicalLocation) &&
        Objects.equals(this.physicalLocation, virtualLobby.physicalLocation) &&
        Objects.equals(this.devices, virtualLobby.devices) &&
        Objects.equals(this.name, virtualLobby.name) &&
        Objects.equals(this.description, virtualLobby.description) &&
        Objects.equals(this.id, virtualLobby.id) &&
        Objects.equals(this.originPhysicalLocation, virtualLobby.originPhysicalLocation) &&
        Objects.equals(this.actions, virtualLobby.actions) &&
        Objects.equals(this.situation, virtualLobby.situation) &&
        Objects.equals(this.group, virtualLobby.group);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cameras, destinationPhysicalLocation, physicalLocation, devices, name, description, id, originPhysicalLocation, actions, situation, group);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VirtualLobby {\n");
    
    sb.append("    cameras: ").append(toIndentedString(cameras)).append("\n");
    sb.append("    destinationPhysicalLocation: ").append(toIndentedString(destinationPhysicalLocation)).append("\n");
    sb.append("    physicalLocation: ").append(toIndentedString(physicalLocation)).append("\n");
    sb.append("    devices: ").append(toIndentedString(devices)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    originPhysicalLocation: ").append(toIndentedString(originPhysicalLocation)).append("\n");
    sb.append("    actions: ").append(toIndentedString(actions)).append("\n");
    sb.append("    situation: ").append(toIndentedString(situation)).append("\n");
    sb.append("    group: ").append(toIndentedString(group)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

