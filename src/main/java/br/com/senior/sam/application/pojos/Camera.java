/*
 * Aplicação
 * Serviço do backend da aplicação do Ronda senior X
 *
 * OpenAPI spec version: 4.7.0
 * Contact: seniorx-dev@senior.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package br.com.senior.sam.application.pojos;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import br.com.senior.sam.application.pojos.CameraDevice;
import br.com.senior.sam.application.pojos.CameraStatus;
import br.com.senior.sam.application.pojos.CctvProxy;
import br.com.senior.sam.application.pojos.DvrServer;
import br.com.senior.sam.application.pojos.PhysicalLocation;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Camera
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-08-24T13:38:01.755Z")



public class Camera {
  @SerializedName("dvrServer")
  private DvrServer dvrServer = null;

  @SerializedName("isPTZ")
  private Boolean isPTZ = null;

  @SerializedName("physicalLocation")
  private PhysicalLocation physicalLocation = null;

  @SerializedName("devices")
  private List<CameraDevice> devices = null;

  @SerializedName("urlStreaming")
  private String urlStreaming = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("cctvProxy")
  private CctvProxy cctvProxy = null;

  @SerializedName("id")
  private Integer id = null;

  @SerializedName("cameraServerId")
  private String cameraServerId = null;

  @SerializedName("streamLink")
  private String streamLink = null;

  @SerializedName("status")
  private CameraStatus status = null;

  public Camera dvrServer(DvrServer dvrServer) {
    this.dvrServer = dvrServer;
    return this;
  }

   /**
   * Get dvrServer
   * @return dvrServer
  **/
  @ApiModelProperty(value = "")
  public DvrServer getDvrServer() {
    return dvrServer;
  }

  public void setDvrServer(DvrServer dvrServer) {
    this.dvrServer = dvrServer;
  }

  public Camera isPTZ(Boolean isPTZ) {
    this.isPTZ = isPTZ;
    return this;
  }

   /**
   * Câmera PTZ
   * @return isPTZ
  **/
  @ApiModelProperty(value = "Câmera PTZ")
  public Boolean isIsPTZ() {
    return isPTZ;
  }

  public void setIsPTZ(Boolean isPTZ) {
    this.isPTZ = isPTZ;
  }

  public Camera physicalLocation(PhysicalLocation physicalLocation) {
    this.physicalLocation = physicalLocation;
    return this;
  }

   /**
   * Get physicalLocation
   * @return physicalLocation
  **/
  @ApiModelProperty(value = "")
  public PhysicalLocation getPhysicalLocation() {
    return physicalLocation;
  }

  public void setPhysicalLocation(PhysicalLocation physicalLocation) {
    this.physicalLocation = physicalLocation;
  }

  public Camera devices(List<CameraDevice> devices) {
    this.devices = devices;
    return this;
  }

  public Camera addDevicesItem(CameraDevice devicesItem) {
    if (this.devices == null) {
      this.devices = new ArrayList<CameraDevice>();
    }
    this.devices.add(devicesItem);
    return this;
  }

   /**
   * Relação Câmera e Dispositivos
   * @return devices
  **/
  @ApiModelProperty(value = "Relação Câmera e Dispositivos")
  public List<CameraDevice> getDevices() {
    return devices;
  }

  public void setDevices(List<CameraDevice> devices) {
    this.devices = devices;
  }

  public Camera urlStreaming(String urlStreaming) {
    this.urlStreaming = urlStreaming;
    return this;
  }

   /**
   * Url de streaming
   * @return urlStreaming
  **/
  @ApiModelProperty(value = "Url de streaming")
  public String getUrlStreaming() {
    return urlStreaming;
  }

  public void setUrlStreaming(String urlStreaming) {
    this.urlStreaming = urlStreaming;
  }

  public Camera name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Nome
   * @return name
  **/
  @ApiModelProperty(value = "Nome")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Camera cctvProxy(CctvProxy cctvProxy) {
    this.cctvProxy = cctvProxy;
    return this;
  }

   /**
   * Get cctvProxy
   * @return cctvProxy
  **/
  @ApiModelProperty(value = "")
  public CctvProxy getCctvProxy() {
    return cctvProxy;
  }

  public void setCctvProxy(CctvProxy cctvProxy) {
    this.cctvProxy = cctvProxy;
  }

  public Camera id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * ID
   * @return id
  **/
  @ApiModelProperty(value = "ID")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public Camera cameraServerId(String cameraServerId) {
    this.cameraServerId = cameraServerId;
    return this;
  }

   /**
   * Servidor da Câmera
   * @return cameraServerId
  **/
  @ApiModelProperty(value = "Servidor da Câmera")
  public String getCameraServerId() {
    return cameraServerId;
  }

  public void setCameraServerId(String cameraServerId) {
    this.cameraServerId = cameraServerId;
  }

  public Camera streamLink(String streamLink) {
    this.streamLink = streamLink;
    return this;
  }

   /**
   * Link do Stream da Câmera
   * @return streamLink
  **/
  @ApiModelProperty(value = "Link do Stream da Câmera")
  public String getStreamLink() {
    return streamLink;
  }

  public void setStreamLink(String streamLink) {
    this.streamLink = streamLink;
  }

  public Camera status(CameraStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public CameraStatus getStatus() {
    return status;
  }

  public void setStatus(CameraStatus status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Camera camera = (Camera) o;
    return Objects.equals(this.dvrServer, camera.dvrServer) &&
        Objects.equals(this.isPTZ, camera.isPTZ) &&
        Objects.equals(this.physicalLocation, camera.physicalLocation) &&
        Objects.equals(this.devices, camera.devices) &&
        Objects.equals(this.urlStreaming, camera.urlStreaming) &&
        Objects.equals(this.name, camera.name) &&
        Objects.equals(this.cctvProxy, camera.cctvProxy) &&
        Objects.equals(this.id, camera.id) &&
        Objects.equals(this.cameraServerId, camera.cameraServerId) &&
        Objects.equals(this.streamLink, camera.streamLink) &&
        Objects.equals(this.status, camera.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dvrServer, isPTZ, physicalLocation, devices, urlStreaming, name, cctvProxy, id, cameraServerId, streamLink, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Camera {\n");
    
    sb.append("    dvrServer: ").append(toIndentedString(dvrServer)).append("\n");
    sb.append("    isPTZ: ").append(toIndentedString(isPTZ)).append("\n");
    sb.append("    physicalLocation: ").append(toIndentedString(physicalLocation)).append("\n");
    sb.append("    devices: ").append(toIndentedString(devices)).append("\n");
    sb.append("    urlStreaming: ").append(toIndentedString(urlStreaming)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    cctvProxy: ").append(toIndentedString(cctvProxy)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    cameraServerId: ").append(toIndentedString(cameraServerId)).append("\n");
    sb.append("    streamLink: ").append(toIndentedString(streamLink)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

